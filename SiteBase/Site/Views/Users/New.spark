<viewdata model="CreateModel" />

<content name="header">${Model.Heading}</content>

<var countryVisible="Model.ListItems.ContainsKey(AddressEntity.CountryProperty)" />

<sbFormPanel panelId="'userNewPanel'">
	<div class="multi-col">
		<div id="col1" class="col">
			<sbFormRow property="'FirstName'" focus="true" />
			<sbFormRow property="'MiddleName'" if="Model.ShowMiddleName" />
			<sbFormRow property="'LastName'" />
			<sbFormRow property="'Email'" />
			<sbFormRow property="'Username'" required="true" helpText="'Identity.Error.Username.Invalid'" if="!WebConstants.UseEmailForUsername" />
			<sbFormRow property="'Password'" inputType="password" helpText="'Identity.Error.Password.Invalid'" />
			<sbFormRow property="'PasswordConfirm'" inputType="password" />
			<sbFormRow>
				<div class="check-box-list">
					<span>${this.CheckBox(x => x.Approved).AutoLabelAfter()}</span>
				</div>
			</sbFormRow>
		</div>
		<div id="col2" class="col">
			<if condition="countryVisible">
				<sbFormRow property="'Country'" required="Model.RequireAddress" />
			</if>
			<else>
				${Html.HiddenFor(m => m.Country)}
			</else>
			<sbFormRow property="'Line1'" required="Model.RequireAddress" />
			<sbFormRow property="'Line2'" />
			<sbFormRow property="'City'" required="Model.RequireAddress" />
			<sbFormRow property="'State'" required="Model.RequireState && !countryVisible" />
			<sbFormRow property="'PostalCode'" required="Model.RequirePostalCode && !countryVisible" />
			<if condition="Model.ListItems.ContainsKey(UserEntity.LanguageProperty)">
				<sbFormRow property="'Language'" includeEmptyOption="false" />
			</if>
			<else>
				${Html.HiddenFor(m => m.Language)}
			</else>
			#//<sbFormRow property="'NotificationPreference'" />
		</div>
	</div>
	<sbFormRow each="var roleGroup in Model.RoleGroups" label="roleGroup.Key">
		<div class="check-box-list">
			<span each="var x in roleGroup.Value">
				<input id="Roles_${x.Value}" type="checkbox" name="Roles" value="${x.Value}" checked="checked?{x.Selected}" /><label for="Roles_${x.Value}">${x.Text}</label>
			</span>
		</div>
	</sbFormRow>
	<div id="roleSelectionLinks" style="display:none">
		<sbFormRow>
			<span id="selectAllRoles" class="link">${Text("Users.SelectAllRoles.Label")}</span> |
			<span id="deselectAllRoles" class="link">${Text("Users.DeselectAllRoles.Label")}</span>
		</sbFormRow>
	</div>
	<sbFormRow property="P(m => m.SendEmail)" helpText="'Users.SendEmail.HelpText'" />
	<sbFormRow inputType="submit" />
</sbFormPanel>

<content name="readyScript">
	var userNewPanel = $('#userNewPanel').data('sbFormPanel');
	$('#selectAllRoles', userNewPanel.element).click(function() {
		$('input:checkbox[name=Roles]', userNewPanel.element).attr('checked', true);
	});
	$('#deselectAllRoles', userNewPanel.element).click(function() {
		$('input:checkbox[name=Roles]', userNewPanel.element).attr('checked', false);
	});
	$('#roleSelectionLinks', userNewPanel.element).show();
	${ValidationRule("Email", "userNewPanel", "remote", "'{0}'".FormatWith(Url.Action("ValidateEmail", "Users", new { Id = 0 })), "Users.Error.DuplicateEmail")}
	<if condition="!WebConstants.UseEmailForUsername">
		${ValidationRule("Username", "userNewPanel", "required", true, "Validation.Error.Required", "Common.Username.Label")}
		${ValidationRule("Username", "userNewPanel", "remote", "'{0}'".FormatWith(Url.Action("ValidateUsername", "Users")), "Identity.Error.DuplicateUsername")}
	</if>
	${ValidationRule("Password", "userNewPanel", "notEqualTo", "'#Username'", "Identity.Error.Password.Invalid")}
	${ValidationRule("PasswordConfirm", "userNewPanel", "equalTo", "'#Password'", "Identity.Error.PasswordConfirm.NotMatched")}
	<if condition="Model.RequireAddress">
		<if condition="countryVisible">
			${ValidationRule("Country", "userNewPanel", "required", true, "Validation.Error.Required", "Common.Country.Label")}
		</if>
		${ValidationRule("Line1", "userNewPanel", "required", true, "Validation.Error.Required", "Common.Line1.Label")}
		${ValidationRule("City", "userNewPanel", "required", true, "Validation.Error.Required", "Common.City.Label")}
	</if>
	<if condition="Model.RequireState && !countryVisible">
		${ValidationRule("State", "userNewPanel", "required", true, "Validation.Error.Required", "Common.State.Label")}
	</if>
	<if condition="Model.RequirePostalCode && !countryVisible">
		${ValidationRule("PostalCode", "userNewPanel", "required", true, "Validation.Error.Required", "Common.PostalCode.Label")}
	</if>
	var country = $('#Country', userNewPanel.element);
	var state = $('#State', userNewPanel.element);
	country.change(function() {
		if (this.value) {
			$.post($.digitalbeacon.resolveUrl('~/states/list'), { country: this.value }, function(data) {
				state.find('option:not(:first)').remove();
				if (data) {
					$.each(data, function(i, x) {
						state.append($('<option/>').attr('value', x.Id).text(x.Name));
					});
				}
			});
		}
		else {
			state.find('option:not(:first)').remove();
		}
	});
</content>
