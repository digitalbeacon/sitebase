<default property="null" type="string" />
<default subProperty="null" type="string" />
<default label="null" type="string" />
<default inputType="null" type="string" />
<default required="null" type="bool?" />
<default inputReadOnly="null" type="bool?" />
<default customText="null" type="string" />
<default includeEmptyOption="true" />
<default helpText="null" type="string" />
<default validation="null" type="string" />
<default validations="null" type="string[]" />
<default generateRowId="true" />
<default rowId="null" type="string" />
<default rowClass="inputType == submit ? 'form-row-submit' : null" />
<default rowStyle="null" type="string" />
<default mask="null" type="string" />
<default maxLength="null" type="int?" />
<default isEntityModel="false" />
<default enableSave="true" />
<default inputSize="0" />
<default enableRenderContent="inputType == renderContent || !property.HasText()" />
<default focus="false" />
<default onClick="null" type="string" />
<default onDeleteClick="null" type="string" />
<default onCancelClick="null" type="string" />
<default enableDelete="onDeleteClick.HasText()" />
<default enableCancel="onCancelClick.HasText()" />
<default initClientModel="false" />

<content name="formRowContent" if="enableRenderContent"><render /></content>

<var clientEvents="new ExpandoObject()" type="dynamic" />
<set clientEvents.onClick="onClick" if="onClick.HasText()" />
<set clientEvents.onDeleteClick="onDeleteClick" if="onDeleteClick.HasText()" />
<set clientEvents.onCancelClick="onCancelClick" if="onCancelClick.HasText()" />

${ClientFormRow(new FormRowOptions { 
	Property = property, 
	SubProperty = subProperty,
	Label = label,
	InputType = inputType,
	Required = required,
	EnableSave = enableSave,
	EnableDelete = enableDelete,
	EnableCancel = enableCancel,
	Model = Model,
	IsEntityModel = isEntityModel,
	ViewData = ViewData,
	RenderContent = enableRenderContent ? Content["formRowContent"].ToString() : null
}, clientEvents, clientModel, initClientModel)}

<if condition="enableRenderContent">
# Content.Remove("formRowContent");
</if>