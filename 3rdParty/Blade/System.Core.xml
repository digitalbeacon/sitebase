<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Core</name>
    </assembly>
    <members>
        <member name="T:System.Css.CSSPageRule">
            <summary>
            Represents a CSS page rule.
            </summary>
        </member>
        <member name="F:System.Css.CSSRule.UNKNOWN_RULE">
            <summary>
            The rule is a CSSUnknownRule.
            </summary>
        </member>
        <member name="F:System.Css.CSSRule.STYLE_RULE">
            <summary>
            The rule is a CSSStyleRule.
            </summary>
        </member>
        <member name="F:System.Css.CSSRule.CHARSET_RULE">
            <summary>
            The rule is a CSSCharsetRule.
            </summary>
        </member>
        <member name="F:System.Css.CSSRule.IMPORT_RULE">
            <summary>
            The rule is a CSSImportRule.
            </summary>
        </member>
        <member name="F:System.Css.CSSRule.MEDIA_RULE">
            <summary>
            The rule is a CSSMediaRule.
            </summary>
        </member>
        <member name="F:System.Css.CSSRule.FONT_FACE_RULE">
            <summary>
            The rule is a CSSFontFaceRule.
            </summary>
        </member>
        <member name="F:System.Css.CSSRule.PAGE_RULE">
            <summary>
            The rule is a CSSPageRule.
            </summary>
        </member>
        <member name="F:System.Css.CSSRule.NAMESPACE_RULE">
            <summary>
            The rule is a NamespaceRule.
            </summary>
        </member>
        <member name="P:System.Css.CSSRule.type">
            <summary>
            Gets the rule type.
            </summary>
        </member>
        <member name="P:System.Css.CSSRule.parentStyleSheet">
            <summary>
            Gets the style sheet containing this rule.
            </summary>
        </member>
        <member name="P:System.Css.CSSRule.parentRule">
            <summary>
            Gets the parent rule.
            </summary>
        </member>
        <member name="P:System.Css.CSSRule.cssText">
            <summary>
            Gets or sets the text value.
            </summary>
        </member>
        <member name="P:System.Css.CSSPageRule.style">
            <summary>
            Gets the CSS style declaration for the rule.
            </summary>
        </member>
        <member name="P:System.Css.CSSPageRule.selectorText">
            <summary>
            Gets or sets the selector text.
            </summary>
        </member>
        <member name="T:System.Html.HTMLElement">
            <summary>
            Represents an HTML element node.
            </summary>
            <summary>
            Represents an HTML element node.
            </summary>
        </member>
        <member name="T:System.Dom.Element">
            <summary>
            Represents an element node.
            </summary>
            <summary>
            Represents an element node.
            </summary>
        </member>
        <member name="T:System.Dom.Node">
            <summary>
            Represents a single node in the document tree.
            </summary>
        </member>
        <member name="F:System.Dom.Node.ELEMENT_NODE">
            <summary>
            Represents a node of type <see cref="T:System.Dom.Element"/>
            </summary>
        </member>
        <member name="F:System.Dom.Node.ATTRIBUTE_NODE">
            <summary>
            Represents a node of type <see cref="T:System.Dom.Attr"/>
            </summary>
        </member>
        <member name="F:System.Dom.Node.TEXT_NODE">
            <summary>
            Represents a node of type <see cref="T:System.Dom.Text"/>
            </summary>
        </member>
        <member name="F:System.Dom.Node.CDATA_SECTION_NODE">
            <summary>
            Represents a node of type CDATASection.
            </summary>
        </member>
        <member name="F:System.Dom.Node.ENTITY_REFERENCE_NODE">
            <summary>
            Represents a node of type EntityReference.
            </summary>
        </member>
        <member name="F:System.Dom.Node.ENTITY_NODE">
            <summary>
            Represents a node of type Entity.
            </summary>
        </member>
        <member name="F:System.Dom.Node.PROCESSING_INSTRUCTION_NODE">
            <summary>
            Represents a node of type <see cref="T:System.Dom.ProcessingInstruction"/>
            </summary>
        </member>
        <member name="F:System.Dom.Node.COMMENT_NODE">
            <summary>
            Represents a node of type <see cref="T:System.Dom.Comment"/>
            </summary>
        </member>
        <member name="F:System.Dom.Node.DOCUMENT_NODE">
            <summary>
            Represents a node of type <see cref="T:System.Dom.Document"/>
            </summary>
        </member>
        <member name="F:System.Dom.Node.DOCUMENT_TYPE_NODE">
            <summary>
            Represents a node of type <see cref="T:System.Dom.DocumentType"/>
            </summary>
        </member>
        <member name="F:System.Dom.Node.DOCUMENT_FRAGMENT_NODE">
            <summary>
            Represents a node of type <see cref="T:System.Dom.DocumentFragment"/>
            </summary>
        </member>
        <member name="F:System.Dom.Node.NOTATION_NODE">
            <summary>
            Represents a node of type Notation.
            </summary>
        </member>
        <member name="M:System.Dom.Node.hasChildNodes">
            <summary>
            Gets a value indicating whether or not the node has any children.
            </summary>
            <returns>True if the node has children, false otherwise.</returns>
        </member>
        <member name="M:System.Dom.Node.contains(System.Dom.Node)">
            <summary>
            Gets a value indicating whether or not a specific node is contained within this node.
            </summary>
            <param name="other">The node to search for.</param>
            <returns>True if the node is contained within this node, false otherwise.</returns>
        </member>
        <member name="M:System.Dom.Node.insertBefore(System.Dom.Node,System.Dom.Node)">
            <summary>
            Inserts a new node in the child collection, before the specific reference node.
            </summary>
            <param name="newChild">The node to insert.</param>
            <param name="refChild">The reference node.</param>
            <returns>The inserted node.</returns>
        </member>
        <member name="M:System.Dom.Node.replaceChild(System.Dom.Node,System.Dom.Node)">
            <summary>
            Replaces a node in the child collection.
            </summary>
            <param name="newChild">The node to insert.</param>
            <param name="oldChild">The node to replace.</param>
            <returns>The replaced node.</returns>
        </member>
        <member name="M:System.Dom.Node.removeChild(System.Dom.Node)">
            <summary>
            Removes a node in the child collection.
            </summary>
            <param name="oldChild">The node to remove.</param>
            <returns>The removed node.</returns>
        </member>
        <member name="M:System.Dom.Node.appendChild(System.Dom.Node)">
            <summary>
            Adds a new node to the end of the child node collection.
            </summary>
            <param name="newChild">The node to add.</param>
            <returns>The added node.</returns>
        </member>
        <member name="M:System.Dom.Node.normalize">
            <summary>
            Puts all text nodes in the full depth of the tree underneath this node.
            </summary>
        </member>
        <member name="M:System.Dom.Node.cloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.
            </summary>
            <param name="deep">True to recursively clone child nodes.</param>
            <returns>The new node.</returns>
        </member>
        <member name="M:System.Dom.Node.isEqualNode(System.Dom.Node)">
            <summary>
            Compares with another node for equality.
            </summary>
            <param name="node">The node to compare to.</param>
            <returns>True if the nodes are equal, false otherwise.</returns>
        </member>
        <member name="P:System.Dom.Node.nodeType">
            <summary>
            Gets the type of the underlying object.
            </summary>
        </member>
        <member name="P:System.Dom.Node.nodeName">
            <summary>
            Gets the name of this node, depending on its type.
            </summary>
        </member>
        <member name="P:System.Dom.Node.ownerDocument">
            <summary>
            Gets the document associated with this node.
            </summary>
        </member>
        <member name="P:System.Dom.Node.parentNode">
            <summary>
            Gets the parent of this node.
            </summary>
        </member>
        <member name="P:System.Dom.Node.parentElement">
            <summary>
            Gets the first available parent element of this node.
            </summary>
        </member>
        <member name="P:System.Dom.Node.childNodes">
            <summary>
            Gets the children of this node.
            </summary>
        </member>
        <member name="P:System.Dom.Node.firstChild">
            <summary>
            Gets the first child of this node.
            </summary>
        </member>
        <member name="P:System.Dom.Node.lastChild">
            <summary>
            Gets the last child of this node.
            </summary>
        </member>
        <member name="P:System.Dom.Node.previousSibling">
            <summary>
            Gets the previous sibling of this node.
            </summary>
        </member>
        <member name="P:System.Dom.Node.nextSibling">
            <summary>
            Gets the next sibling of this node.
            </summary>
        </member>
        <member name="P:System.Dom.Node.nodeValue">
            <summary>
            Gets or sets the value of this node.
            </summary>
        </member>
        <member name="P:System.Dom.Node.textContent">
            <summary>
            Gets or sets the text content of this node.
            </summary>
        </member>
        <member name="M:System.Dom.Element.getAttribute(System.String)">
            <summary>
            Gets an attribute value by attribute name.
            </summary>
            <param name="name">The attribute name.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:System.Dom.Element.getAttributeNS(System.String,System.String)">
            <summary>
            Gets an attribute value by namspace and name.
            </summary>
            <param name="namespaceURI">The namespace.</param>
            <param name="localName">The attribute name.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:System.Dom.Element.setAttribute(System.String,System.String)">
            <summary>
            Sets an attribute value by attribute name.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:System.Dom.Element.setAttributeNS(System.String,System.String,System.String)">
            <summary>
            Sets an attribute value by namespace and name.
            </summary>
            <param name="namespaceURI">The namespace.</param>
            <param name="qualifiedName">The attribute name.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:System.Dom.Element.removeAttribute(System.String)">
            <summary>
            Removes an attribute by name.
            </summary>
            <param name="name">The attribute name.</param>
        </member>
        <member name="M:System.Dom.Element.removeAttributeNS(System.String,System.String)">
            <summary>
            Removes an attribute by namespace and name.
            </summary>
            <param name="namespaceURI">The namespace.</param>
            <param name="localName">The attribute name.</param>
        </member>
        <member name="M:System.Dom.Element.hasAttribute(System.String)">
            <summary>
            Gets a value indicating whether or not the element has a specific attribute.
            </summary>
            <param name="name">The attribute name.</param>
            <returns>True if the attribute exists, false otherwise.</returns>
        </member>
        <member name="M:System.Dom.Element.hasAttributeNS(System.String,System.String)">
            <summary>
            Gets a value indicating whether or not the element has a specific attribute.
            </summary>
            <param name="namespaceURI">The namespace.</param>
            <param name="localName">The attribute name.</param>
            <returns>True if the attribute exists, false otherwise.</returns>
        </member>
        <member name="M:System.Dom.Element.getElementsByTagName(System.String)">
            <summary>
            Gets all child elements with the specified tag name.
            </summary>
            <param name="name">The tag name.</param>
            <returns>A collection of matching elements.</returns>
        </member>
        <member name="M:System.Dom.Element.getElementsByTagNameNS(System.String,System.String)">
            <summary>
            Gets all child elements with the specified name and namespace.
            </summary>
            <param name="namespaceURI">The namespace.</param>
            <param name="localName">The node name.</param>
            <returns>A collection of matching nodes.</returns>
        </member>
        <member name="M:System.Dom.Element.getElementsByClassName(System.String)">
            <summary>
            Gets all child elements with the specified class name.
            </summary>
            <param name="className">The class name.</param>
            <returns>A collection of matching nodes.</returns>
        </member>
        <member name="M:System.Dom.Element.getClientRects">
            <summary>
            Gets all bounding rectangles.
            </summary>
            <returns>A collection of rectangles.</returns>
        </member>
        <member name="M:System.Dom.Element.getBoundingClientRect">
            <summary>
            Gets the union of all bounding rectangles.
            </summary>
            <returns>A single rectangle.</returns>
        </member>
        <member name="M:System.Dom.Element.scrollIntoView(System.Boolean)">
            <summary>
            Scrolls the element into view on the page.
            </summary>
            <param name="top">True to align top, false to align bottom.</param>
        </member>
        <member name="P:System.Dom.Element.tagName">
            <summary>
            Gets the tag name of the element.
            </summary>
        </member>
        <member name="P:System.Dom.Element.namespaceURI">
            <summary>
            Gets the namespace URI of this node.
            </summary>
        </member>
        <member name="P:System.Dom.Element.prefix">
            <summary>
            Gets the namespace prefix of the node.
            </summary>
        </member>
        <member name="P:System.Dom.Element.localName">
            <summary>
            Gets the local part of the qualified name of an element.
            </summary>
        </member>
        <member name="P:System.Dom.Element.id">
            <summary>
            Gets or sets the id attribute value.
            </summary>
        </member>
        <member name="P:System.Dom.Element.className">
            <summary>
            Gets or sets the class attribute value.
            </summary>
        </member>
        <member name="P:System.Dom.Element.classList">
            <summary>
            Gets that class attribute as a token list.
            </summary>
        </member>
        <member name="P:System.Dom.Element.attributes">
            <summary>
            Gets all attributes associated with the element.
            </summary>
        </member>
        <member name="P:System.Dom.Element.children">
            <summary>
            Gets all child nodes of an element as a collection.
            </summary>
        </member>
        <member name="P:System.Dom.Element.firstElementChild">
            <summary>
            Gets the first direct child element of an element.
            </summary>
        </member>
        <member name="P:System.Dom.Element.lastElementChild">
            <summary>
            Gets the last direct child element of an element.
            </summary>
        </member>
        <member name="P:System.Dom.Element.previousElementSibling">
            <summary>
            Gets the immediately preceding element.
            </summary>
        </member>
        <member name="P:System.Dom.Element.nextElementSibling">
            <summary>
            Gets the immediately following element.
            </summary>
        </member>
        <member name="P:System.Dom.Element.childElementCount">
            <summary>
            Gets the number of child nodes that are elements.
            </summary>
        </member>
        <member name="P:System.Dom.Element.scrollTop">
            <summary>
            Gets or sets the top scroll offset.
            </summary>
        </member>
        <member name="P:System.Dom.Element.scrollLeft">
            <summary>
            Gets or sets the left scroll offset.
            </summary>
        </member>
        <member name="P:System.Dom.Element.scrollWidth">
            <summary>
            Gets the scroll width.
            </summary>
        </member>
        <member name="P:System.Dom.Element.scrollHeight">
            <summary>
            Gets the scroll height.
            </summary>
        </member>
        <member name="P:System.Dom.Element.clientTop">
            <summary>
            Gets the width of the top border.
            </summary>
        </member>
        <member name="P:System.Dom.Element.clientLeft">
            <summary>
            Gets the width of the left border.
            </summary>
        </member>
        <member name="P:System.Dom.Element.clientWidth">
            <summary>
            Gets the inner width.
            </summary>
        </member>
        <member name="P:System.Dom.Element.clientHeight">
            <summary>
            Gets the inner height.
            </summary>
        </member>
        <member name="M:System.Html.HTMLElement.addEventListener(System.String,System.Dom.EventListener,System.Boolean)">
            <summary>
            Registers an event listener with the target.
            </summary>
            <param name="type">The event type name.</param>
            <param name="listener">The listener to register.</param>
            <param name="useCapture">Whether or not to use capture.</param>
        </member>
        <member name="M:System.Html.HTMLElement.addEventListener(System.String,System.Dom.EventHandler,System.Boolean)">
            <summary>
            Registers an event handler with the target.
            </summary>
            <param name="type">The event type name.</param>
            <param name="handler">The event handler function.</param>
            <param name="useCapture">Whether or not to use capture.</param>
        </member>
        <member name="M:System.Html.HTMLElement.removeEventListener(System.String,System.Dom.EventListener,System.Boolean)">
            <summary>
            Removes an event listener from a target.
            </summary>
            <param name="type">The event type name.</param>
            <param name="listener">The listener to remove.</param>
            <param name="useCapture">Whether or not capture was used.</param>
        </member>
        <member name="M:System.Html.HTMLElement.removeEventListener(System.String,System.Dom.EventHandler,System.Boolean)">
            <summary>
            Removes an event handler from a target.
            </summary>
            <param name="type">The event type name.</param>
            <param name="handler">The event handler function.</param>
            <param name="useCapture">Whether or not capture was used.</param>
        </member>
        <member name="P:System.Html.HTMLElement.offsetParent">
            <summary>
            Gets the closest positioned containing element.
            </summary>
        </member>
        <member name="P:System.Html.HTMLElement.offsetTop">
            <summary>
            Gets the number of pixels between the top of this element and the top of its offset parent.
            </summary>
        </member>
        <member name="P:System.Html.HTMLElement.offsetLeft">
            <summary>
            Gets the number of pixels between the left of this element and the left of its offset parent.
            </summary>
        </member>
        <member name="P:System.Html.HTMLElement.offsetWidth">
            <summary>
            Gets the full layout width.
            </summary>
        </member>
        <member name="P:System.Html.HTMLElement.offsetHeight">
            <summary>
            Gets the full layout height.
            </summary>
        </member>
        <member name="T:System.Dom.ProcessingInstruction">
            <summary>
            Represents a processing instruction, used in XML as a way to keep processor-specific information in the text of the document.
            </summary>
        </member>
        <member name="T:System.Dom.CharacterData">
            <summary>
            The base object for <see cref="T:System.Dom.Text"/>, <see cref="T:System.Dom.Comment"/>, and <see cref="T:System.Dom.ProcessingInstruction"/> objects.
            </summary>
        </member>
        <member name="M:System.Dom.CharacterData.substringData(System.Int32,System.Int32)">
            <summary>
            Extracts a range of characters from the node.
            </summary>
            <param name="offset">The start index.</param>
            <param name="count">The number of characters to extract.</param>
            <returns>The extracted text.</returns>
        </member>
        <member name="M:System.Dom.CharacterData.appendData(System.String)">
            <summary>
            Appends text to the end of the node.
            </summary>
            <param name="arg">The text to append.</param>
        </member>
        <member name="M:System.Dom.CharacterData.insertData(System.Int32,System.String)">
            <summary>
            Inserts text at a specified offset in the node.
            </summary>
            <param name="offset">The start index.</param>
            <param name="arg">The text to insert.</param>
        </member>
        <member name="M:System.Dom.CharacterData.deleteData(System.Int32,System.Int32)">
            <summary>
            Removes text at a specified offset in the node.
            </summary>
            <param name="offset">The start index.</param>
            <param name="count">The number of characters to remove.</param>
        </member>
        <member name="M:System.Dom.CharacterData.replaceData(System.Int32,System.Int32,System.String)">
            <summary>
            Replaces text at a specified offset in the node.
            </summary>
            <param name="offset">The start index.</param>
            <param name="count">The number of characters to replace.</param>
            <param name="arg">The text to insert.</param>
        </member>
        <member name="P:System.Dom.CharacterData.data">
            <summary>
            Gets or sets the node character data.
            </summary>
        </member>
        <member name="P:System.Dom.CharacterData.length">
            <summary>
            Gets the number of characters in the node.
            </summary>
        </member>
        <member name="P:System.Dom.ProcessingInstruction.target">
            <summary>
            Gets the target of this processing instruction.
            </summary>
        </member>
        <member name="T:System.Dom.Attr">
            <summary>
            Represents an attribute of an <see cref="T:System.Dom.Element"/> node.
            </summary>
        </member>
        <member name="P:System.Dom.Attr.name">
            <summary>
            Gets the attribute name.
            </summary>
        </member>
        <member name="P:System.Dom.Attr.value">
            <summary>
            Gets or sets the value of the attribute.
            </summary>
        </member>
        <member name="T:System.Browser.History">
            <summary>
            The definition for the browser history object.
            </summary>
        </member>
        <member name="M:System.Browser.History.back">
            <summary>
            Loads the previous document in the history.
            </summary>
        </member>
        <member name="M:System.Browser.History.forward">
            <summary>
            Loads the next document in the history.
            </summary>
        </member>
        <member name="M:System.Browser.History.go(System.Int32)">
            <summary>
            Loads a document from history, relative to the current offset.
            </summary>
            <param name="delta">The history offset.</param>
        </member>
        <member name="M:System.Browser.History.pushState(System.Object,System.String)">
            <summary>
            Pushes a new item onto the history stack.
            </summary>
            <param name="state">The state data.</param>
            <param name="title">The title text.</param>
        </member>
        <member name="M:System.Browser.History.pushState(System.Object,System.String,System.String)">
            <summary>
            Pushes a new item onto the history stack.
            </summary>
            <param name="state">The state data.</param>
            <param name="title">The title text.</param>
            <param name="url">The URL.</param>
        </member>
        <member name="M:System.Browser.History.replaceState(System.Object,System.String)">
            <summary>
            Replaces the current item on the history stack.
            </summary>
            <param name="state">The state data.</param>
            <param name="title">The title text.</param>
        </member>
        <member name="M:System.Browser.History.replaceState(System.Object,System.String,System.String)">
            <summary>
            Replaces the current item on the history stack.
            </summary>
            <param name="state">The state data.</param>
            <param name="title">The title text.</param>
            <param name="url">The URL.</param>
        </member>
        <member name="P:System.Browser.History.length">
            <summary>
            Gets the number of items in the history.
            </summary>
        </member>
        <member name="P:System.Browser.History.state">
            <summary>
            Gets or sets the current history state.
            </summary>
        </member>
        <member name="T:System.Dom.NodeFilter">
            <summary>
            An object able to describe filtered nodes for use when traversing a tree.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.FILTER_ACCEPT">
            <summary>
            The node is accepted by the filter.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.FILTER_REJECT">
            <summary>
            The node is rejected by the filter.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.FILTER_SKIP">
            <summary>
            The node is skipped by the filter.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.SHOW_ALL">
            <summary>
            Show all nodes.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.SHOW_ELEMENT">
            <summary>
            Show element nodes.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.SHOW_ATTRIBUTE">
            <summary>
            Show attribute nodes.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.SHOW_TEXT">
            <summary>
            Show text nodes.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.SHOW_CDATA_SECTION">
            <summary>
            Show CDATA section nodes.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.SHOW_ENTITY_REFERENCE">
            <summary>
            Show entity reference nodes.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.SHOW_ENTITY">
            <summary>
            Show entity nodes.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.SHOW_PROCESSING_INSTRUCTION">
            <summary>
            Show processing instruction nodes.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.SHOW_COMMENT">
            <summary>
            Show comment nodes.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.SHOW_DOCUMENT">
            <summary>
            Show document nodes.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.SHOW_DOCUMENT_TYPE">
            <summary>
            Show document type nodes.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.SHOW_DOCUMENT_FRAGMENT">
            <summary>
            Show document fragment nodes.
            </summary>
        </member>
        <member name="F:System.Dom.NodeFilter.SHOW_NOTATION">
            <summary>
            Show notation nodes.
            </summary>
        </member>
        <member name="M:System.Dom.NodeFilter.acceptNode(System.Dom.Node)">
            <summary>
            Tests whether a specified node is visible in the logical view .
            </summary>
            <param name="n">The node to test.</param>
            <returns>An integer representing the node state.</returns>
        </member>
        <member name="T:System.Dom.DocumentFragment">
            <summary>
            Represents a document fragment node.
            </summary>
        </member>
        <member name="T:System.Css.LinkStyle">
            <summary>
            Represents a link style within a style sheet.
            </summary>
        </member>
        <member name="P:System.Css.LinkStyle.sheet">
            <summary>
            Gets the containing style sheet.
            </summary>
        </member>
        <member name="T:System.Css.ClientRect">
            <summary>
            Represents a rectangular object.
            </summary>
        </member>
        <member name="P:System.Css.ClientRect.top">
            <summary>
            Gets the y-coordinate for the top side of the rectangle.
            </summary>
        </member>
        <member name="P:System.Css.ClientRect.right">
            <summary>
            Gets the x-coordinate for the right side of the rectangle.
            </summary>
        </member>
        <member name="P:System.Css.ClientRect.bottom">
            <summary>
            Gets the y-coordinate for the bottom side of the rectangle.
            </summary>
        </member>
        <member name="P:System.Css.ClientRect.left">
            <summary>
            Gets the x-coordinate for the left side of the rectangle.
            </summary>
        </member>
        <member name="P:System.Css.ClientRect.width">
            <summary>
            Gets the width of the rectangle.
            </summary>
        </member>
        <member name="P:System.Css.ClientRect.height">
            <summary>
            Gets the height of the rectangle.
            </summary>
        </member>
        <member name="T:System.Css.MediaQueryList">
            <summary>
            Represents a collection of media queries on a document.
            </summary>
        </member>
        <member name="M:System.Css.MediaQueryList.addListener(System.Css.MediaQueryListListener)">
            <summary>
            Adds a new listener to the media query list.
            </summary>
            <param name="listener">The listener to add.</param>
        </member>
        <member name="M:System.Css.MediaQueryList.removeListener(System.Css.MediaQueryListListener)">
            <summary>
            Removes an existing listener from the media query list.
            </summary>
            <param name="listener">The listener to remove.</param>
        </member>
        <member name="P:System.Css.MediaQueryList.media">
            <summary>
            Gets the serialized media query list.
            </summary>
        </member>
        <member name="P:System.Css.MediaQueryList.matches">
            <summary>
            Gets a value indicating if the document matches the media query list.
            </summary>
        </member>
        <member name="T:System.Dom.Range">
            <summary>
            Represents a fragment of a document.
            </summary>
            <summary>
            Represents a fragment of a document.
            </summary>
        </member>
        <member name="F:System.Dom.Range.START_TO_START">
            <summary>
            Compares from start of source, to start of range.
            </summary>
        </member>
        <member name="F:System.Dom.Range.START_TO_END">
            <summary>
            Compares from start of source, to end of range.
            </summary>
        </member>
        <member name="F:System.Dom.Range.END_TO_END">
            <summary>
            Compares from end of source, to end of range.
            </summary>
        </member>
        <member name="F:System.Dom.Range.END_TO_START">
            <summary>
            Compares from end of source, to start of range.
            </summary>
        </member>
        <member name="M:System.Dom.Range.getClientRects">
            <summary>
            Gets the bounding rectanges for this range.
            </summary>
            <returns>A collection of rectangles.</returns>
        </member>
        <member name="M:System.Dom.Range.getBoundingClientRect">
            <summary>
            Gets the union of all bounding rectangles for this range.
            </summary>
            <returns>A single rectangle.</returns>
        </member>
        <member name="M:System.Dom.Range.setStart(System.Dom.Node,System.Int32)">
            <summary>
            Sets the start position of a range.
            </summary>
            <param name="refNode">The reference node.</param>
            <param name="offset">The reference offset.</param>
        </member>
        <member name="M:System.Dom.Range.setEnd(System.Dom.Node,System.Int32)">
            <summary>
            Sets the end position of a range.
            </summary>
            <param name="refNode">The reference node.</param>
            <param name="offset">The reference offset.</param>
        </member>
        <member name="M:System.Dom.Range.setStartBefore(System.Dom.Node)">
            <summary>
            Sets the start position of a range to the node before another node.
            </summary>
            <param name="refNode">The reference node.</param>
        </member>
        <member name="M:System.Dom.Range.setStartAfter(System.Dom.Node)">
            <summary>
            Sets the start position of a range to the node after another node.
            </summary>
            <param name="refNode">The reference node.</param>
        </member>
        <member name="M:System.Dom.Range.setEndBefore(System.Dom.Node)">
            <summary>
            Sets the end position of a range to the node before another node.
            </summary>
            <param name="refNode">The reference node.</param>
        </member>
        <member name="M:System.Dom.Range.setEndAfter(System.Dom.Node)">
            <summary>
            Sets the end position of a range to the node after another node.
            </summary>
            <param name="refNode">The reference node.</param>
        </member>
        <member name="M:System.Dom.Range.collapse(System.Boolean)">
            <summary>
            Collapses the Range to one of its boundary points.
            </summary>
            <param name="toStart">True to collapse to start, false to collapse to end.</param>
        </member>
        <member name="M:System.Dom.Range.selectNode(System.Dom.Node)">
            <summary>
            Sets the range to contain the node and its contents.
            </summary>
            <param name="refNode">The reference node.</param>
        </member>
        <member name="M:System.Dom.Range.selectNodeContents(System.Dom.Node)">
            <summary>
            Sets the range to contain the contents of a node.
            </summary>
            <param name="refNode">The reference node.</param>
        </member>
        <member name="M:System.Dom.Range.compareBoundaryPoints(System.Int32,System.Dom.Range)">
            <summary>
            Compares the boundary points of two ranges.
            </summary>
            <param name="how">A value indicating how to compare.</param>
            <param name="sourceRange">The source range.</param>
            <returns>A number, -1 if before source, 0 if equal to source, +1 if after the source.</returns>
        </member>
        <member name="M:System.Dom.Range.deleteContents">
            <summary>
            Removes the contents of a Range from the document.
            </summary>
        </member>
        <member name="M:System.Dom.Range.extractContents">
            <summary>
            Moves contents of a range from the document tree into a fragment.
            </summary>
            <returns>The newly created fragment.</returns>
        </member>
        <member name="M:System.Dom.Range.cloneContents">
            <summary>
            Returns a fragment copying the nodes of a Range.
            </summary>
            <returns>The newly created fragment.</returns>
        </member>
        <member name="M:System.Dom.Range.insertNode(System.Dom.Node)">
            <summary>
            Inserts a node at the start of a range.
            </summary>
            <param name="newNode">The node to insert.</param>
        </member>
        <member name="M:System.Dom.Range.surroundContents(System.Dom.Node)">
            <summary>
            Moves the content of a range into a new node.
            </summary>
            <param name="newParent">The new parent node.</param>
        </member>
        <member name="M:System.Dom.Range.cloneRange">
            <summary>
            Returns a range object with boundary points identical to the cloned range.
            </summary>
            <returns>The newly created range.</returns>
        </member>
        <member name="M:System.Dom.Range.detach">
            <summary>
            Releases the range from use.
            </summary>
        </member>
        <member name="P:System.Dom.Range.startContainer">
            <summary>
            Gets the Node within which the Range starts.
            </summary>
        </member>
        <member name="P:System.Dom.Range.startOffset">
            <summary>
            Gets a number representing where in the startContainer the Range starts.
            </summary>
        </member>
        <member name="P:System.Dom.Range.endContainer">
            <summary>
            Gets the Node within which the Range ends.
            </summary>
        </member>
        <member name="P:System.Dom.Range.endOffset">
            <summary>
            Gets a number representing where in the endContainer the Range ends.
            </summary>
        </member>
        <member name="P:System.Dom.Range.collapsed">
            <summary>
            Gets a value indicating whether the range's start and end points are at the same position.
            </summary>
        </member>
        <member name="P:System.Dom.Range.commonAncestorContainer">
            <summary>
            Gets the deepest Node that contains the startContainer and endContainer Nodes.
            </summary>
        </member>
        <member name="T:window">
            <summary>
            Provides access to the methods, properties, and events available through the DOM window object.
            </summary>
        </member>
        <member name="T:System.Browser.Window">
            <summary>
            The definition for the browser window object.
            </summary>
            <summary>
            The definition for the browser window object.
            </summary>
            <summary>
            This interface defines functions that are present in the global namespace of ECMAScript.
            </summary>
            <summary>
            The definition for the browser window object.
            </summary>
        </member>
        <member name="T:System.Dom.EventTarget">
            <summary>
            Defines the service contract for any object which may produce events.
            </summary>
        </member>
        <member name="M:System.Dom.EventTarget.addEventListener(System.String,System.Dom.EventListener,System.Boolean)">
            <summary>
            Registers an event listener with the target.
            </summary>
            <param name="type">The event type name.</param>
            <param name="listener">The listener to register.</param>
            <param name="useCapture">Whether or not to use capture.</param>
        </member>
        <member name="M:System.Dom.EventTarget.removeEventListener(System.String,System.Dom.EventListener,System.Boolean)">
            <summary>
            Removes an event listener from a target.
            </summary>
            <param name="type">The event type name.</param>
            <param name="listener">The listener to remove.</param>
            <param name="useCapture">Whether or not capture was used.</param>
        </member>
        <member name="M:System.Dom.EventTarget.dispatchEvent(System.Dom.Event)">
            <summary>
            Dispatches an event through the taret.
            </summary>
            <param name="evt">The event object.</param>
            <returns>True if the event completes, false otherwise.</returns>
        </member>
        <member name="M:System.Browser.Window.close">
            <summary>
            Closes the window.
            </summary>
        </member>
        <member name="M:System.Browser.Window.stop">
            <summary>
            Stops window loading.
            </summary>
        </member>
        <member name="M:System.Browser.Window.focus">
            <summary>
            Sets focus on the current window.
            </summary>
        </member>
        <member name="M:System.Browser.Window.blur">
            <summary>
            Sets focus away from the window.
            </summary>
        </member>
        <member name="M:System.Browser.Window.open(System.String)">
            <summary>
            Opens a new window.
            </summary>
            <param name="url">The URL to open.</param>
            <returns>The new window.</returns>
        </member>
        <member name="M:System.Browser.Window.open(System.String,System.String)">
            <summary>
            Opens a new window.
            </summary>
            <param name="url">The URL to open.</param>
            <param name="name">The name to apply to the window.</param>
            <returns></returns>
        </member>
        <member name="M:System.Browser.Window.open(System.String,System.String,System.String)">
            <summary>
            Opens a new window.
            </summary>
            <param name="url">The URL to open.</param>
            <param name="name">The name to apply to the window.</param>
            <param name="features">A string representing the features available on the window.</param>
            <returns></returns>
        </member>
        <member name="M:System.Browser.Window.alert(System.String)">
            <summary>
            Displays an alert message.
            </summary>
            <param name="message">The message text.</param>
        </member>
        <member name="M:System.Browser.Window.confirm(System.String)">
            <summary>
            Displays a confirmation message.
            </summary>
            <param name="message">The message text.</param>
            <returns>True if the user selects OK, false otherwise.</returns>
        </member>
        <member name="M:System.Browser.Window.prompt(System.String)">
            <summary>
            Displays a prompt requesting input from the user.
            </summary>
            <param name="message">The prompt message.</param>
            <returns>The user entered text.</returns>
        </member>
        <member name="M:System.Browser.Window.prompt(System.String,System.String)">
            <summary>
            Displays a prompt requesting input from the user.
            </summary>
            <param name="message">The prompt message.</param>
            <param name="defaultValue">The initial input value.</param>
            <returns>The user entered text.</returns>
        </member>
        <member name="M:System.Browser.Window.print">
            <summary>
            Opens the browser's print dialog.
            </summary>
        </member>
        <member name="M:System.Browser.Window.showModalDialog(System.String)">
            <summary>
            Displays a modal dialog containing another document.
            </summary>
            <param name="url">The URL to show.</param>
            <returns>A variant return value from the loaded document.</returns>
        </member>
        <member name="M:System.Browser.Window.showModalDialog(System.String,System.Object)">
            <summary>
            Displays a modal dialog containing another document.
            </summary>
            <param name="url">The URL to show.</param>
            <param name="argument">Parameters that are passed to the document.</param>
            <returns>A variant return value from the loaded document.</returns>
        </member>
        <member name="M:System.Browser.Window.postMessage(System.Object,System.String)">
            <summary>
            Sends a message to another window, which may be in a different domain.
            </summary>
            <param name="message">The message data.</param>
            <param name="targetOrigin">The origin for the receiving window.</param>
        </member>
        <member name="M:System.Browser.Window.setTimeout(System.IFunction,System.Int32,System.Object[])">
            <summary>
            Schedules a function to run once.
            </summary>
            <param name="handler">The function to execute.</param>
            <param name="delay">The delay, in milliseconds.</param>
            <param name="args">Optional arguments to pass to the handler.</param>
            <returns>An ID that can be used to clear the timeout.</returns>
        </member>
        <member name="M:System.Browser.Window.setTimeout(System.String,System.Int32)">
            <summary>
            Schedules a code snippet to run once.
            </summary>
            <param name="code">The code to run.</param>
            <param name="delay">The delay, in milliseconds.</param>
            <returns>An ID that can be used to clear the timeout.</returns>
        </member>
        <member name="M:System.Browser.Window.clearTimeout(System.Int32)">
            <summary>
            Prevents execution of a previously created timeout.
            </summary>
            <param name="timeoutId">The timeout ID.</param>
        </member>
        <member name="M:System.Browser.Window.setInterval(System.IFunction,System.Int32,System.Object[])">
            <summary>
            Schedules a function to run at a specific interval.
            </summary>
            <param name="handler">The function to execute.</param>
            <param name="delay">The delay, in milliseconds.</param>
            <param name="args">Optional arguments to pass to the handler.</param>
            <returns>An ID that can be used to clear the timeout.</returns>
        </member>
        <member name="M:System.Browser.Window.setInterval(System.String,System.Int32)">
            <summary>
            Schedules a code snippet to run at a specific interval.
            </summary>
            <param name="code">The code to run.</param>
            <param name="delay">The delay, in milliseconds.</param>
            <returns>An ID that can be used to clear the timeout.</returns>
        </member>
        <member name="M:System.Browser.Window.clearInterval(System.Int32)">
            <summary>
            Prevents further execution of a previously created interval.
            </summary>
            <param name="intervalId">The interval ID.</param>
        </member>
        <member name="M:System.Browser.Window.requestAnimationFrame(System.IFunction)">
            <summary>
            Tells the browser that you wish to perform an animation and requests that the browser schedule a repaint of the window for the next animation frame.
            </summary>
            <remarks>
            This is provided for convenience but is not supported in all browsers, see https://developer.mozilla.org/en-US/docs/DOM/window.requestAnimationFrame#Browser_compatibility for details.
            </remarks>
            <param name="callback"></param>
        </member>
        <member name="M:System.Browser.Window.matchMedia(System.String)">
            <summary>
            Gets a <see cref="T:System.Css.MediaQueryList"/> object representing the specified media query string.
            </summary>
            <param name="queryString"></param>
            <returns>The requested media queries.</returns>
        </member>
        <member name="M:System.Browser.Window.scroll(System.Int32,System.Int32)">
            <summary>
            Scrolls to a specific place in the document.
            </summary>
            <param name="x">The X position, in pixels.</param>
            <param name="y">The Y position, in pixels.</param>
        </member>
        <member name="M:System.Browser.Window.scrollTo(System.Int32,System.Int32)">
            <summary>
            Scrolls to a specific place in the document.
            </summary>
            <param name="x">The X position, in pixels.</param>
            <param name="y">The Y position, in pixels.</param>
        </member>
        <member name="M:System.Browser.Window.scrollBy(System.Int32,System.Int32)">
            <summary>
            Scrolls the document relative to its current position.
            </summary>
            <param name="deltaX">The X position change, in pixels.</param>
            <param name="deltaY">The Y position change, in pixels.</param>
        </member>
        <member name="M:System.Browser.Window.decodeURI(System.String)">
            <summary>
            Replaces each UTF-8 escape sequence with the character that it represents.
            </summary>
            <param name="uri">The URI to decode.</param>
            <returns>A decoded string.</returns>
        </member>
        <member name="M:System.Browser.Window.decodeURIComponent(System.String)">
            <summary>
            Replaces each UTF-8 escape sequence with the character representation.
            </summary>
            <param name="uriComponent">The URI component to decode.</param>
            <returns>A decoded string.</returns>
        </member>
        <member name="M:System.Browser.Window.encodeURI(System.String)">
            <summary>
            Replaces applicable characters of a URI with their UTF-8 encoded representation.
            </summary>
            <param name="uri">The URI to encode.</param>
            <returns>An encoded string.</returns>
        </member>
        <member name="M:System.Browser.Window.encodeURIComponent(System.String)">
            <summary>
            Replaces applicable characters of a URI component with their UTF-8 encoded representation.
            </summary>
            <param name="uriComponent">The URI component.</param>
            <returns>An encoded string.</returns>
        </member>
        <member name="M:System.Browser.Window.eval(System.String)">
            <summary>
            Executes a script at runtime.
            </summary>
            <param name="value">The script text.</param>
        </member>
        <member name="M:System.Browser.Window.isFinite(System.INumber)">
            <summary>
            Gets a value indicating whether or not the input is a finite number.
            </summary>
            <param name="value">The input value.</param>
            <returns>True is the number is finite, false otherwise.</returns>
        </member>
        <member name="M:System.Browser.Window.isNaN(System.INumber)">
            <summary>
            Gets a value indicating whether or not the input is NaN.
            </summary>
            <param name="value">The input value.</param>
            <returns>True is the number is NaN, false otherwise.</returns>
        </member>
        <member name="M:System.Browser.Window.parseFloat(System.String)">
            <summary>
            Converts a string to a floating point numeric value.
            </summary>
            <param name="value">The input string.</param>
            <returns>A floating point number.</returns>
        </member>
        <member name="M:System.Browser.Window.parseInt(System.String)">
            <summary>
            Converts a string to an integer value.
            </summary>
            <param name="value">The input string.</param>
            <returns>An integer.</returns>
        </member>
        <member name="M:System.Browser.Window.getComputedStyle(System.Dom.Element)">
            <summary>
            Gets the final CSS values resulting from all CSS properties applied to an element.
            </summary>
            <param name="elt">The target element.</param>
            <returns>A CSS style.</returns>
        </member>
        <member name="M:System.Browser.Window.getComputedStyle(System.Dom.Element,System.String)">
            <summary>
            Gets the final CSS values resulting from all CSS properties applied to an element.
            </summary>
            <param name="elt">The target element.</param>
            <param name="pseudoElt">The pseudo-element to match.</param>
            <returns>A CSS style.</returns>
        </member>
        <member name="P:System.Browser.Window.self">
            <summary>
            Gets a reference to this window.
            </summary>
        </member>
        <member name="P:System.Browser.Window.document">
            <summary>
            Gets the document for this window.
            </summary>
        </member>
        <member name="P:System.Browser.Window.name">
            <summary>
            Gets or sets the name of the window.
            </summary>
        </member>
        <member name="P:System.Browser.Window.location">
            <summary>
            Gets a reference to this window's location object.
            </summary>
        </member>
        <member name="P:System.Browser.Window.history">
            <summary>
            Gets a reference to this window's history object.
            </summary>
        </member>
        <member name="P:System.Browser.Window.navigator">
            <summary>
            Gets a reference to this window's navigator object.
            </summary>
        </member>
        <member name="P:System.Browser.Window.status">
            <summary>
            Gets or sets the window status text.
            </summary>
        </member>
        <member name="P:System.Browser.Window.frames">
            <summary>
            Gets the subframes of this window.
            </summary>
        </member>
        <member name="P:System.Browser.Window.length">
            <summary>
            Gets the number of frames in the window.
            </summary>
        </member>
        <member name="P:System.Browser.Window.top">
            <summary>
            Gets a reference to the topmost window.
            </summary>
        </member>
        <member name="P:System.Browser.Window.opener">
            <summary>
            Gets a reference to the window that opened this window.
            </summary>
        </member>
        <member name="P:System.Browser.Window.parent">
            <summary>
            Gets a reference to the parent window.
            </summary>
        </member>
        <member name="P:System.Browser.Window.frameElement">
            <summary>
            Gets the element in which the window is embedded, if any.
            </summary>
        </member>
        <member name="P:System.Browser.Window.localStorage">
            <summary>
            Provides a Storage object for an origin.
            </summary>
        </member>
        <member name="P:System.Browser.Window.sessionStorage">
            <summary>
            Represents the set of storage areas specific to the current top-level browsing context.
            </summary>
        </member>
        <member name="P:System.Browser.Window.JSON">
            <summary>
            The JSON object contains methods for converting values to JavaScript Object Notation (JSON) and for converting JSON to values.
            </summary>
        </member>
        <member name="P:System.Browser.Window.screen">
            <summary>
            Gets the Screen for the window.
            </summary>
        </member>
        <member name="P:System.Browser.Window.innerWidth">
            <summary>
            Gets the width of the content area of the browser window including, if rendered, the vertical scrollbar.
            </summary>
        </member>
        <member name="P:System.Browser.Window.innerHeight">
            <summary>
            Gets the height of the content area of the browser window including, if rendered, the horizontal scrollbar.
            </summary>
        </member>
        <member name="P:System.Browser.Window.scrollX">
            <summary>
            Gets the number of pixels that the document has already been scrolled horizontally.
            </summary>
        </member>
        <member name="P:System.Browser.Window.pageXOffset">
            <summary>
            An alias for <see cref="P:System.Browser.Window.scrollX"/>.
            </summary>
        </member>
        <member name="P:System.Browser.Window.scrollY">
            <summary>
            Gets the number of pixels that the document has already been scrolled vertically.
            </summary>
        </member>
        <member name="P:System.Browser.Window.pageYOffset">
            <summary>
            An alias for <see cref="P:System.Browser.Window.scrollY"/>.
            </summary>
        </member>
        <member name="P:System.Browser.Window.screenX">
            <summary>
            Gets the horizontal distance of the left border of the user's browser from the left side of the screen.
            </summary>
        </member>
        <member name="P:System.Browser.Window.screenY">
            <summary>
            Gets the vertical distance of the top border of the user's browser from the top side of the screen.
            </summary>
        </member>
        <member name="P:System.Browser.Window.outerWidth">
            <summary>
            Gets the width of the outside of the browser window.
            </summary>
        </member>
        <member name="P:System.Browser.Window.outerHeight">
            <summary>
            Gets the height of the outside of the browser window.
            </summary>
        </member>
        <member name="P:System.Browser.Window.Infinity">
            <summary>
            Represents the numeric value of infinity.
            </summary>
        </member>
        <member name="P:System.Browser.Window.NaN">
            <summary>
            Represents the numeric value of a non-numeric value
            </summary>
        </member>
        <member name="P:System.Browser.Window.undefined">
            <summary>
            Represents the undefined object.
            </summary>
        </member>
        <member name="M:window.close">
            <summary>
            Closes the window.
            </summary>
        </member>
        <member name="M:window.stop">
            <summary>
            Stops window loading.
            </summary>
        </member>
        <member name="M:window.focus">
            <summary>
            Sets focus on the current window.
            </summary>
        </member>
        <member name="M:window.blur">
            <summary>
            Sets focus away from the window.
            </summary>
        </member>
        <member name="M:window.open(System.String)">
            <summary>
            Opens a new window.
            </summary>
            <param name="url">The URL to open.</param>
            <returns>The new window.</returns>
        </member>
        <member name="M:window.open(System.String,System.String)">
            <summary>
            Opens a new window.
            </summary>
            <param name="url">The URL to open.</param>
            <param name="name">The name to apply to the window.</param>
            <returns></returns>
        </member>
        <member name="M:window.open(System.String,System.String,System.String)">
            <summary>
            Opens a new window.
            </summary>
            <param name="url">The URL to open.</param>
            <param name="name">The name to apply to the window.</param>
            <param name="features">A string representing the features available on the window.</param>
            <returns></returns>
        </member>
        <member name="M:window.alert(System.String)">
            <summary>
            Displays an alert message.
            </summary>
            <param name="message">The message text.</param>
        </member>
        <member name="M:window.confirm(System.String)">
            <summary>
            Displays a confirmation message.
            </summary>
            <param name="message">The message text.</param>
            <returns>True if the user selects OK, false otherwise.</returns>
        </member>
        <member name="M:window.prompt(System.String)">
            <summary>
            Displays a prompt requesting input from the user.
            </summary>
            <param name="message">The prompt message.</param>
            <returns>The user entered text.</returns>
        </member>
        <member name="M:window.prompt(System.String,System.String)">
            <summary>
            Displays a prompt requesting input from the user.
            </summary>
            <param name="message">The prompt message.</param>
            <param name="defaultValue">The initial input value.</param>
            <returns>The user entered text.</returns>
        </member>
        <member name="M:window.print">
            <summary>
            Opens the browser's print dialog.
            </summary>
        </member>
        <member name="M:window.showModalDialog(System.String)">
            <summary>
            Displays a modal dialog containing another document.
            </summary>
            <param name="url">The URL to show.</param>
            <returns>A variant return value from the loaded document.</returns>
        </member>
        <member name="M:window.showModalDialog(System.String,System.Object)">
            <summary>
            Displays a modal dialog containing another document.
            </summary>
            <param name="url">The URL to show.</param>
            <param name="argument">Parameters that are passed to the document.</param>
            <returns>A variant return value from the loaded document.</returns>
        </member>
        <member name="M:window.postMessage(System.Object,System.String)">
            <summary>
            Sends a message to another window, which may be in a different domain.
            </summary>
            <param name="message">The message data.</param>
            <param name="targetOrigin">The origin for the receiving window.</param>
        </member>
        <member name="M:window.setTimeout(System.IFunction,System.Int32,System.Object[])">
            <summary>
            Schedules a function to run once.
            </summary>
            <param name="handler">The function to execute.</param>
            <param name="delay">The delay, in milliseconds.</param>
            <param name="args">Optional arguments to pass to the handler.</param>
            <returns>An ID that can be used to clear the timeout.</returns>
        </member>
        <member name="M:window.setTimeout(System.String,System.Int32)">
            <summary>
            Schedules a code snippet to run once.
            </summary>
            <param name="code">The code to run.</param>
            <param name="delay">The delay, in milliseconds.</param>
            <returns>An ID that can be used to clear the timeout.</returns>
        </member>
        <member name="M:window.clearTimeout(System.Int32)">
            <summary>
            Prevents execution of a previously created timeout.
            </summary>
            <param name="timeoutId">The timeout ID.</param>
        </member>
        <member name="M:window.setInterval(System.IFunction,System.Int32,System.Object[])">
            <summary>
            Schedules a function to run at a specific interval.
            </summary>
            <param name="handler">The function to execute.</param>
            <param name="delay">The delay, in milliseconds.</param>
            <param name="args">Optional arguments to pass to the handler.</param>
            <returns>An ID that can be used to clear the timeout.</returns>
        </member>
        <member name="M:window.setInterval(System.String,System.Int32)">
            <summary>
            Schedules a code snippet to run at a specific interval.
            </summary>
            <param name="code">The code to run.</param>
            <param name="delay">The delay, in milliseconds.</param>
            <returns>An ID that can be used to clear the timeout.</returns>
        </member>
        <member name="M:window.clearInterval(System.Int32)">
            <summary>
            Prevents further execution of a previously created interval.
            </summary>
            <param name="intervalId">The interval ID.</param>
        </member>
        <member name="M:window.requestAnimationFrame(System.IFunction)">
            <summary>
            Tells the browser that you wish to perform an animation and requests that the browser schedule a repaint of the window for the next animation frame.
            </summary>
            <remarks>
            This is provided for convenience but is not supported in all browsers, see https://developer.mozilla.org/en-US/docs/DOM/window.requestAnimationFrame#Browser_compatibility for details.
            </remarks>
            <param name="callback"></param>
        </member>
        <member name="M:window.matchMedia(System.String)">
            <summary>
            Gets a <see cref="T:System.Css.MediaQueryList"/> object representing the specified media query string.
            </summary>
            <param name="queryString"></param>
            <returns>The requested media queries.</returns>
        </member>
        <member name="M:window.scroll(System.Int32,System.Int32)">
            <summary>
            Scrolls to a specific place in the document.
            </summary>
            <param name="x">The X position, in pixels.</param>
            <param name="y">The Y position, in pixels.</param>
        </member>
        <member name="M:window.scrollTo(System.Int32,System.Int32)">
            <summary>
            Scrolls to a specific place in the document.
            </summary>
            <param name="x">The X position, in pixels.</param>
            <param name="y">The Y position, in pixels.</param>
        </member>
        <member name="M:window.scrollBy(System.Int32,System.Int32)">
            <summary>
            Scrolls the document relative to its current position.
            </summary>
            <param name="deltaX">The X position change, in pixels.</param>
            <param name="deltaY">The Y position change, in pixels.</param>
        </member>
        <member name="M:window.getComputedStyle(System.Dom.Element)">
            <summary>
            Gets the final CSS values resulting from all CSS properties applied to an element.
            </summary>
            <param name="elt">The target element.</param>
            <returns>A CSS style.</returns>
        </member>
        <member name="M:window.getComputedStyle(System.Dom.Element,System.String)">
            <summary>
            Gets the final CSS values resulting from all CSS properties applied to an element.
            </summary>
            <param name="elt">The target element.</param>
            <param name="pseudoElt">The pseudo-element to match.</param>
            <returns>A CSS style.</returns>
        </member>
        <member name="M:window.decodeURI(System.String)">
            <summary>
            Replaces each UTF-8 escape sequence with the character that it represents.
            </summary>
            <param name="uri">The URI to decode.</param>
            <returns>A decoded string.</returns>
        </member>
        <member name="M:window.decodeURIComponent(System.String)">
            <summary>
            Replaces each UTF-8 escape sequence with the character representation.
            </summary>
            <param name="uriComponent">The URI component to decode.</param>
            <returns>A decoded string.</returns>
        </member>
        <member name="M:window.encodeURI(System.String)">
            <summary>
            Replaces applicable characters of a URI with their UTF-8 encoded representation.
            </summary>
            <param name="uri">The URI to encode.</param>
            <returns>An encoded string.</returns>
        </member>
        <member name="M:window.encodeURIComponent(System.String)">
            <summary>
            Replaces applicable characters of a URI component with their UTF-8 encoded representation.
            </summary>
            <param name="uriComponent">The URI component.</param>
            <returns>An encoded string.</returns>
        </member>
        <member name="M:window.eval(System.String)">
            <summary>
            Executes a script at runtime.
            </summary>
            <param name="value">The script text.</param>
        </member>
        <member name="M:window.isFinite(System.INumber)">
            <summary>
            Gets a value indicating whether or not the input is a finite number.
            </summary>
            <param name="value">The input value.</param>
            <returns>True is the number is finite, false otherwise.</returns>
        </member>
        <member name="M:window.isNaN(System.INumber)">
            <summary>
            Gets a value indicating whether or not the input is NaN.
            </summary>
            <param name="value">The input value.</param>
            <returns>True is the number is NaN, false otherwise.</returns>
        </member>
        <member name="M:window.parseFloat(System.String)">
            <summary>
            Converts a string to a floating point numeric value.
            </summary>
            <param name="value">The input string.</param>
            <returns>A floating point number.</returns>
        </member>
        <member name="M:window.parseInt(System.String)">
            <summary>
            Converts a string to an integer value.
            </summary>
            <param name="value">The input string.</param>
            <returns>An integer.</returns>
        </member>
        <member name="M:window.addEventListener(System.String,System.Dom.EventListener,System.Boolean)">
            <summary>
            Registers an event listener with the target.
            </summary>
            <param name="type">The event type name.</param>
            <param name="listener">The listener to register.</param>
            <param name="useCapture">Whether or not to use capture.</param>
        </member>
        <member name="M:window.addEventListener(System.String,System.Dom.EventHandler,System.Boolean)">
            <summary>
            Registers an event handler with the target.
            </summary>
            <param name="type">The event type name.</param>
            <param name="handler">The event handler function.</param>
            <param name="useCapture">Whether or not to use capture.</param>
        </member>
        <member name="M:window.removeEventListener(System.String,System.Dom.EventListener,System.Boolean)">
            <summary>
            Removes an event listener from a target.
            </summary>
            <param name="type">The event type name.</param>
            <param name="listener">The listener to remove.</param>
            <param name="useCapture">Whether or not capture was used.</param>
        </member>
        <member name="M:window.removeEventListener(System.String,System.Dom.EventHandler,System.Boolean)">
            <summary>
            Removes an event handler from a target.
            </summary>
            <param name="type">The event type name.</param>
            <param name="handler">The event handler function.</param>
            <param name="useCapture">Whether or not capture was used.</param>
        </member>
        <member name="M:window.dispatchEvent(System.Dom.Event)">
            <summary>
            Dispatches an event through the taret.
            </summary>
            <param name="evt">The event object.</param>
            <returns>True if the event completes, false otherwise.</returns>
        </member>
        <member name="P:window.self">
            <summary>
            Gets a reference to this window.
            </summary>
        </member>
        <member name="P:window.document">
            <summary>
            Gets the document for this window.
            </summary>
        </member>
        <member name="P:window.name">
            <summary>
            Gets or sets the name of the window.
            </summary>
        </member>
        <member name="P:window.location">
            <summary>
            Gets a reference to this window's location object.
            </summary>
        </member>
        <member name="P:window.history">
            <summary>
            Gets a reference to this window's history object.
            </summary>
        </member>
        <member name="P:window.navigator">
            <summary>
            Gets a reference to this window's navigator object.
            </summary>
        </member>
        <member name="P:window.status">
            <summary>
            Gets or sets the window status text.
            </summary>
        </member>
        <member name="P:window.frames">
            <summary>
            Gets the subframes of this window.
            </summary>
        </member>
        <member name="P:window.length">
            <summary>
            Gets the number of frames in the window.
            </summary>
        </member>
        <member name="P:window.top">
            <summary>
            Gets a reference to the topmost window.
            </summary>
        </member>
        <member name="P:window.opener">
            <summary>
            Gets a reference to the window that opened this window.
            </summary>
        </member>
        <member name="P:window.parent">
            <summary>
            Gets a reference to the parent window.
            </summary>
        </member>
        <member name="P:window.frameElement">
            <summary>
            Gets the element in which the window is embedded, if any.
            </summary>
        </member>
        <member name="P:window.localStorage">
            <summary>
            Provides a Storage object for an origin.
            </summary>
        </member>
        <member name="P:window.sessionStorage">
            <summary>
            Represents the set of storage areas specific to the current top-level browsing context.
            </summary>
        </member>
        <member name="P:window.JSON">
            <summary>
            The JSON object contains methods for converting values to JavaScript Object Notation (JSON) and for converting JSON to values.
            </summary>
        </member>
        <member name="P:window.screen">
            <summary>
            Gets the Screen for the window.
            </summary>
        </member>
        <member name="P:window.innerWidth">
            <summary>
            Gets the width of the content area of the browser window including, if rendered, the vertical scrollbar.
            </summary>
        </member>
        <member name="P:window.innerHeight">
            <summary>
            Gets the height of the content area of the browser window including, if rendered, the horizontal scrollbar.
            </summary>
        </member>
        <member name="P:window.scrollX">
            <summary>
            Gets the number of pixels that the document has already been scrolled horizontally.
            </summary>
        </member>
        <member name="P:window.pageXOffset">
            <summary>
            An alias for <see cref="P:window.scrollX"/>.
            </summary>
        </member>
        <member name="P:window.scrollY">
            <summary>
            Gets the number of pixels that the document has already been scrolled vertically.
            </summary>
        </member>
        <member name="P:window.pageYOffset">
            <summary>
            An alias for <see cref="P:window.scrollY"/>.
            </summary>
        </member>
        <member name="P:window.screenX">
            <summary>
            Gets the horizontal distance of the left border of the user's browser from the left side of the screen.
            </summary>
        </member>
        <member name="P:window.screenY">
            <summary>
            Gets the vertical distance of the top border of the user's browser from the top side of the screen.
            </summary>
        </member>
        <member name="P:window.outerWidth">
            <summary>
            Gets the width of the outside of the browser window.
            </summary>
        </member>
        <member name="P:window.outerHeight">
            <summary>
            Gets the height of the outside of the browser window.
            </summary>
        </member>
        <member name="P:window.Infinity">
            <summary>
            Represents the numeric value of infinity.
            </summary>
        </member>
        <member name="P:window.NaN">
            <summary>
            Represents the numeric value of a non-numeric value
            </summary>
        </member>
        <member name="P:window.undefined">
            <summary>
            Represents the undefined object.
            </summary>
        </member>
        <member name="T:System.Browser.Navigator">
            <summary>
            The definition for the browser navigator object.
            </summary>
        </member>
        <member name="P:System.Browser.Navigator.appName">
            <summary>
            Gets the name of the browser.
            </summary>
        </member>
        <member name="P:System.Browser.Navigator.appVersion">
            <summary>
            Gets the browser version information.
            </summary>
        </member>
        <member name="P:System.Browser.Navigator.cookieEnabled">
            <summary>
            Gets a value indicating whether or not cookies are enabled.
            </summary>
        </member>
        <member name="P:System.Browser.Navigator.language">
            <summary>
            Gets the current browser language.
            </summary>
        </member>
        <member name="P:System.Browser.Navigator.platform">
            <summary>
            Gets the name of the platform the browser is running on.
            </summary>
        </member>
        <member name="P:System.Browser.Navigator.userAgent">
            <summary>
            Gets the user agent text.
            </summary>
        </member>
        <member name="T:System.Browser.XMLHttpRequest">
            <summary>
            Represents the browser's XMLHttpRequest object.
            </summary>
        </member>
        <member name="M:System.Browser.XMLHttpRequest.abort">
            <summary>
            Aborts the request if it has already been sent.
            </summary>
        </member>
        <member name="M:System.Browser.XMLHttpRequest.getAllResponseHeaders">
            <summary>
            Gets all the response headers as a string, or null if no response has been received.
            </summary>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:System.Browser.XMLHttpRequest.getResponseHeader(System.String)">
            <summary>
            Gets the string containing the text of the specified header, or null if either the
            response has not yet been received or the header doesn't exist in the response.
            </summary>
            <param name="name">The header name.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:System.Browser.XMLHttpRequest.open(System.String,System.String)">
            <summary>
            Initializes a request.
            </summary>
            <param name="method">The HTTP method to use, such as "GET", "POST", "PUT", "DELETE", etc.</param>
            <param name="url">The URL to which to send the request.</param>
        </member>
        <member name="M:System.Browser.XMLHttpRequest.open(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a request. 
            </summary>
            <param name="method">The HTTP method to use, such as "GET", "POST", "PUT", "DELETE", etc.</param>
            <param name="url">The URL to which to send the request.</param>
            <param name="isAsync">Indicates whether or not to perform the operation asynchronously.</param>
        </member>
        <member name="M:System.Browser.XMLHttpRequest.open(System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a request. 
            </summary>
            <param name="method">The HTTP method to use, such as "GET", "POST", "PUT", "DELETE", etc.</param>
            <param name="url">The URL to which to send the request.</param>
            <param name="isAsync">Indicates whether or not to perform the operation asynchronously.</param>
            <param name="user">A user name to use for authentication purposes.</param>
            <param name="password">A password to use for authentication purposes.</param>
        </member>
        <member name="M:System.Browser.XMLHttpRequest.send">
            <summary>
            Sends the request.
            </summary>
        </member>
        <member name="M:System.Browser.XMLHttpRequest.send(System.String)">
            <summary>
            Sends the request, with data.
            </summary>
            <param name="data">The data string.</param>
        </member>
        <member name="M:System.Browser.XMLHttpRequest.send(System.Dom.Document)">
            <summary>
            Sends the request, with data.
            </summary>
            <param name="data">A DOM document.</param>
        </member>
        <member name="M:System.Browser.XMLHttpRequest.setRequestHeader(System.String,System.String)">
            <summary>
            Sets the value of an HTTP request header.
            </summary>
            <param name="header">The name of the header whose value is to be set.</param>
            <param name="value">The value to set as the body of the header.</param>
        </member>
        <member name="P:System.Browser.XMLHttpRequest.onreadystatechange">
            <summary>
            Gets or sets a function that is called whenever the readyState attribute changes.
            </summary>
        </member>
        <member name="P:System.Browser.XMLHttpRequest.readyState">
            <summary>
            Gets the state of the request.
            </summary>
        </member>
        <member name="P:System.Browser.XMLHttpRequest.responseXML">
            <summary>
            Gets the response as a DOM document.
            </summary>
        </member>
        <member name="P:System.Browser.XMLHttpRequest.responseText">
            <summary>
            Gets the response text.
            </summary>
        </member>
        <member name="P:System.Browser.XMLHttpRequest.status">
            <summary>
            Gets the HTTP result code.
            </summary>
        </member>
        <member name="P:System.Browser.XMLHttpRequest.statusText">
            <summary>
            Gets the response string.
            </summary>
        </member>
        <member name="T:System.RegExp">
            <summary>
            Represents the ECMA regular expression object.
            </summary>
        </member>
        <member name="M:System.RegExp.#ctor(System.String)">
            <summary>
            Creates a new regular expression.
            </summary>
            <param name="pattern">The regex pattern.</param>
        </member>
        <member name="M:System.RegExp.#ctor(System.String,System.String)">
            <summary>
            Creates a new regular expression.
            </summary>
            <param name="pattern">The regex pattern.</param>
            <param name="flags">The regex flags.</param>
        </member>
        <member name="M:System.RegExp.exec(System.String)">
            <summary>
            Executes the regular expression.
            </summary>
            <param name="input">The input text.</param>
            <returns>A collection of matches.</returns>
        </member>
        <member name="M:System.RegExp.test(System.String)">
            <summary>
            Tests the regular expression for matches.
            </summary>
            <param name="input">The input text.</param>
            <returns>True if the input matches, false otherwise.</returns>
        </member>
        <member name="P:System.RegExp.global">
            <summary>
            Gets a value indicating whether or not the regular expression's global flag is set.
            </summary>
        </member>
        <member name="P:System.RegExp.ignoreCase">
            <summary>
            Gets a value indicating whether or not the regular expression's ignore case flag is set.
            </summary>
        </member>
        <member name="P:System.RegExp.lastIndex">
            <summary>
            Gets or sets the last index of the regular expression.
            </summary>
        </member>
        <member name="P:System.RegExp.multiline">
            <summary>
            Gets a value indicating whether or not the regular expression's multiline flag is set.
            </summary>
        </member>
        <member name="P:System.RegExp.source">
            <summary>
            Get the regular expression source text.
            </summary>
        </member>
        <member name="T:System.Dom.Document">
            <summary>
            Represents a document node.
            </summary>
            <summary>
            Represents a document node.
            </summary>
            <summary>
            Represents a document node.
            </summary>
            <summary>
            Represents a document node.
            </summary>
        </member>
        <member name="M:System.Dom.Document.enableStyleSheetsForSet(System.String)">
            <summary>
            Enables the style sheet with the specified name, and 
            disables all other named style sheets.
            </summary>
            <param name="name">The style sheet to enable.</param>
        </member>
        <member name="M:System.Dom.Document.createElement(System.String)">
            <summary>
            Creates a new element.
            </summary>
            <param name="tagName">The element tag name.</param>
            <returns>The newly created element.</returns>
        </member>
        <member name="M:System.Dom.Document.createElementNS(System.String,System.String)">
            <summary>
            Creates a new element, with a specific namespace.
            </summary>
            <param name="namespaceURI">The namespace.</param>
            <param name="qualifiedName">The qualified node name.</param>
            <returns>The newly created element.</returns>
        </member>
        <member name="M:System.Dom.Document.createDocumentFragment">
            <summary>
            Creates an empty document fragment.
            </summary>
            <returns>The newly created fragment.</returns>
        </member>
        <member name="M:System.Dom.Document.createTextNode(System.String)">
            <summary>
            Creates a text node.
            </summary>
            <param name="data">The inner text.</param>
            <returns>The newly created text node.</returns>
        </member>
        <member name="M:System.Dom.Document.createComment(System.String)">
            <summary>
            Creates a comment node.
            </summary>
            <param name="data">The inner text.</param>
            <returns>The newly created comment node.</returns>
        </member>
        <member name="M:System.Dom.Document.createProcessingInstruction(System.String,System.String)">
            <summary>
            Creates a processing instruction node.
            </summary>
            <param name="target">The target value.</param>
            <param name="data">The data value.</param>
            <returns>The newly created processing instruction node.</returns>
        </member>
        <member name="M:System.Dom.Document.createEvent(System.String)">
            <summary>
            Creates a new event object.
            </summary>
            <param name="eventName">The event interface name.</param>
            <returns>An event object.</returns>
        </member>
        <member name="M:System.Dom.Document.createRange">
            <summary>
            Creates a new range object.
            </summary>
            <returns>A range object.</returns>
        </member>
        <member name="M:System.Dom.Document.createNodeIterator(System.Dom.Node,System.Int32,System.Dom.NodeFilter)">
            <summary>
            Creates a <see cref="T:System.Dom.NodeIterator"/> object.
            </summary>
            <param name="root">The node at which to begin traversal.</param>
            <param name="whatToShow">A NodeFilter constant indicating which nodes to iterate over.</param>
            <param name="filter">An object inheriting the <see cref="T:System.Dom.NodeFilter"/> class.</param>
            <returns>A node iterator object.</returns>
        </member>
        <member name="M:System.Dom.Document.createTreeWalker(System.Dom.Node,System.Int32,System.Dom.NodeFilter)">
            <summary>
            Creates a <see cref="T:System.Dom.TreeWalker"/> object.
            </summary>
            <param name="root">The node at which to begin traversal.</param>
            <param name="whatToShow">A NodeFilter constant indicating which nodes to iterate over.</param>
            <param name="filter">An object inheriting the <see cref="T:System.Dom.NodeFilter"/> class.</param>
            <returns>A tree walker object.</returns>
        </member>
        <member name="M:System.Dom.Document.getElementsByTagName(System.String)">
            <summary>
            Gets all elements in the document with the specified tag name.
            </summary>
            <param name="tagname">The tag name.</param>
            <returns>A collection of matching elements.</returns>
        </member>
        <member name="M:System.Dom.Document.getElementsByTagNameNS(System.String,System.String)">
            <summary>
            Gets all elements in the document with the specified namespace and name.
            </summary>
            <param name="namespaceURI">The namespace.</param>
            <param name="localName">The node name.</param>
            <returns>A collection of matching elements.</returns>
        </member>
        <member name="M:System.Dom.Document.getElementsByClassName(System.String)">
            <summary>
            Gets all elements in the document with the specified class name.
            </summary>
            <param name="className">The class name.</param>
            <returns>A collection of matching elements.</returns>
        </member>
        <member name="M:System.Dom.Document.getElementById(System.String)">
            <summary>
            Gets a single element in the document by ID.
            </summary>
            <param name="elementId">The element ID.</param>
            <returns>The matching element.</returns>
        </member>
        <member name="M:System.Dom.Document.importNode(System.Dom.Node,System.Boolean)">
            <summary>
            Creates a copy of a node from an external document.
            </summary>
            <param name="importedNode">The node from another document.</param>
            <param name="deep">True to recursively copy child nodes.</param>
            <returns>The newly created node.</returns>
        </member>
        <member name="M:System.Dom.Document.adoptNode(System.Dom.Node)">
            <summary>
            Adopts a node from an external document.
            </summary>
            <param name="node">The external node.</param>
            <returns>The adopted node.</returns>
        </member>
        <member name="M:System.Dom.Document.hasFocus">
            <summary>
            Gets a value indicating whether the object currently has focus.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Dom.Document.elementFromPoint(System.Int32,System.Int32)">
            <summary>
            Gets the element at the specified coordinates in the viewport.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <returns>An element.</returns>
        </member>
        <member name="P:System.Dom.Document.styleSheets">
            <summary>
            Gets the style sheets applied to the document.
            </summary>
        </member>
        <member name="P:System.Dom.Document.selectedStyleSheetSet">
            <summary>
            Gets or sets the name of the currently selected style sheet.
            </summary>
        </member>
        <member name="P:System.Dom.Document.lastStyleSheetSet">
            <summary>
            Gets the name of the last style sheet.
            </summary>
        </member>
        <member name="P:System.Dom.Document.preferredStyleSheetSet">
            <summary>
            Gets the name of the preferred style sheet.
            </summary>
        </member>
        <member name="P:System.Dom.Document.styleSheetSets">
            <summary>
            Gets the name of each style sheet.
            </summary>
        </member>
        <member name="P:System.Dom.Document.title">
            <summary>
            Gets or sets the title of the document.
            </summary>
        </member>
        <member name="P:System.Dom.Document.cookie">
            <summary>
            Gets or sets the HTTP cookies string.
            </summary>
        </member>
        <member name="P:System.Dom.Document.referrer">
            <summary>
            Gets the address of the Document from which the user navigated to this one,
            unless it was blocked or there was no such document, in which case it returns the empty string.
            </summary>
        </member>
        <member name="P:System.Dom.Document.domain">
            <summary>
            Gets the domain name of the server that provided the document.
            </summary>
        </member>
        <member name="P:System.Dom.Document.activeElement">
            <summary>
            Gets the currently focused element in the document.
            </summary>
        </member>
        <member name="P:System.Dom.Document.body">
            <summary>
            Gets or sets the body of the document.
            </summary>
        </member>
        <member name="P:System.Dom.Document.doctype">
            <summary>
            Gets the document type node for this document.
            </summary>
        </member>
        <member name="P:System.Dom.Document.implementation">
            <summary>
            Gets the DOM implementation for this document.
            </summary>
        </member>
        <member name="P:System.Dom.Document.documentElement">
            <summary>
            Gets the root element of the document.
            </summary>
        </member>
        <member name="P:System.Dom.Document.URL">
            <summary>
            Gets the document URL.
            </summary>
        </member>
        <member name="P:System.Dom.Document.documentURI">
            <summary>
            Gets the document URL.
            </summary>
        </member>
        <member name="P:System.Dom.Document.compatMode">
            <summary>
            Gets a value of either "CSS1Compat" or "BackCompat", depending on
            whether or not the document is in quirks mode.
            </summary>
        </member>
        <member name="P:System.Dom.Document.characterSet">
            <summary>
            Gets the document text encoding.
            </summary>
        </member>
        <member name="P:System.Dom.Document.contentType">
            <summary>
            Gets the document context type.
            </summary>
        </member>
        <member name="T:System.Css.CSSFontFaceRule">
            <summary>
            Represents a CSS font face rule.
            </summary>
        </member>
        <member name="P:System.Css.CSSFontFaceRule.style">
            <summary>
            Gets the CSS style declaration for the rule.
            </summary>
        </member>
        <member name="T:System.Dom.UIEvent">
            <summary>
            Represents an event created from a UI action.
            </summary>
        </member>
        <member name="T:System.Dom.Event">
            <summary>
            An object used to pass information about an event to event handler.
            </summary>
        </member>
        <member name="F:System.Dom.Event.CAPTURING_PHASE">
            <summary>
            Represents the capturing phase of an event.
            </summary>
        </member>
        <member name="F:System.Dom.Event.AT_TARGET">
            <summary>
            Represents the target evaluation phase of an event.
            </summary>
        </member>
        <member name="F:System.Dom.Event.BUBBLING_PHASE">
            <summary>
            Represents the bubbling phase of an event.
            </summary>
        </member>
        <member name="M:System.Dom.Event.stopPropagation">
            <summary>
            Stops further propagation of an event.
            </summary>
        </member>
        <member name="M:System.Dom.Event.stopImmediatePropagation">
            <summary>
            Immediately stops further propagation of an event.
            </summary>
        </member>
        <member name="M:System.Dom.Event.preventDefault">
            <summary>
            Cancels the event, causing the default action of the event not to occur.
            </summary>
        </member>
        <member name="M:System.Dom.Event.initEvent(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes the value of an event.
            </summary>
            <param name="type">The event type name.</param>
            <param name="canBubble">Whether or not the event can bubble.</param>
            <param name="canCancel">Whether or not the event can be cancelled.</param>
        </member>
        <member name="P:System.Dom.Event.type">
            <summary>
            Gets the type name of the event.
            </summary>
        </member>
        <member name="P:System.Dom.Event.target">
            <summary>
            Gets the target which originated the event.
            </summary>
        </member>
        <member name="P:System.Dom.Event.currentTarget">
            <summary>
            Gets the target which is currently being processed.
            </summary>
        </member>
        <member name="P:System.Dom.Event.eventPhase">
            <summary>
            Gets the current event phase.
            </summary>
        </member>
        <member name="P:System.Dom.Event.bubbles">
            <summary>
            Gets a value indicating whether or not the event bubbles.
            </summary>
        </member>
        <member name="P:System.Dom.Event.cancelable">
            <summary>
            Gets a value indicating whether or not the event can be cancelled.
            </summary>
        </member>
        <member name="P:System.Dom.Event.timeStamp">
            <summary>
            Get the date and time when the event was created.
            </summary>
        </member>
        <member name="P:System.Dom.Event.defaultPrevented">
            <summary>
            Gets a value indicating whether or not the default action has been prevented.
            </summary>
        </member>
        <member name="M:System.Dom.UIEvent.initUIEvent(System.String,System.Boolean,System.Boolean,System.Browser.Window,System.Int32)">
            <summary>
            Initializes the value of a UI event.
            </summary>
            <param name="type">The event type name.</param>
            <param name="canBubble">Whether or not the event can bubble.</param>
            <param name="canCancel">Whether or not the event can be cancelled.</param>
            <param name="view">The associated view.</param>
            <param name="detail">The event details.</param>
        </member>
        <member name="P:System.Dom.UIEvent.view">
            <summary>
            Gets the view from which the event was generated.
            </summary>
        </member>
        <member name="P:System.Dom.UIEvent.detail">
            <summary>
            Gets details about the event, which may vary depending on type.
            </summary>
        </member>
        <member name="T:System.Dom.DOMException">
            <summary>
            Represents an exception that occurs while executing a process within the DOM.
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.INDEX_SIZE_ERR">
            <summary>
            The index is not in the allowed range. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.DOMSTRING_SIZE_ERR">
            <summary>
            The string is not of a valid size.
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.HIERARCHY_REQUEST_ERR">
            <summary>
            The operation would yield an incorrect node tree. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.WRONG_DOCUMENT_ERR">
            <summary>
            The object is in the wrong document. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.INVALID_CHARACTER_ERR">
            <summary>
            The string contains invalid characters. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.NO_DATA_ALLOWED_ERR">
            <summary>
            Data is not allowed.
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR">
            <summary>
            The object can not be modified. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.NOT_FOUND_ERR">
            <summary>
            The object can not be found here. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.NOT_SUPPORTED_ERR">
            <summary>
            The operation is not supported. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.INUSE_ATTRIBUTE_ERR">
            <summary>
            The attribute is already in use.
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.INVALID_STATE_ERR">
            <summary>
            The object is in an invalid state. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.SYNTAX_ERR">
            <summary>
            The string did not match the expected pattern. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.INVALID_MODIFICATION_ERR">
            <summary>
            The object can not be modified in this way. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.NAMESPACE_ERR">
            <summary>
            The operation is not allowed by Namespaces in XML.
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.INVALID_ACCESS_ERR">
            <summary>
            The object does not support the operation or argument. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.VALIDATION_ERR">
            <summary>
            The object is not valid.
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.TYPE_MISMATCH_ERR">
            <summary>
            The type of the object does not match the expected type. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.SECURITY_ERR">
            <summary>
            The operation is insecure. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.NETWORK_ERR">
            <summary>
            A network error occurred. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.ABORT_ERR">
            <summary>
            The operation was aborted. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.URL_MISMATCH_ERR">
            <summary>
            The given URL does not match another URL. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.QUOTA_EXCEEDED_ERR">
            <summary>
            The quota has been exceeded. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.TIMEOUT_ERR">
            <summary>
            The operation timed out. 
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.INVALID_NODE_TYPE_ERR">
            <summary>
            The supplied node is incorrect or has an incorrect ancestor for this operation.
            </summary>
        </member>
        <member name="F:System.Dom.DOMException.DATA_CLONE_ERR">
            <summary>
            The object can not be cloned. 
            </summary>
        </member>
        <member name="P:System.Dom.DOMException.code">
            <summary>
            Gets or sets the exception code.
            </summary>
        </member>
        <member name="T:System.Error">
            <summary>
            Represents the ECMA Error object.
            </summary>
        </member>
        <member name="M:System.Error.#ctor">
            <summary>
            Creates a new error.
            </summary>
        </member>
        <member name="M:System.Error.#ctor(System.Object)">
            <summary>
            Creates a new error with the specified message text.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:System.Dom.NodeIterator">
            <summary>
            An object used to step through a set of nodes.
            </summary>
        </member>
        <member name="M:System.Dom.NodeIterator.nextNode">
            <summary>
            Moves to and returns the next node in document order, relative to the current node.
            </summary>
            <returns>The specified node.</returns>
        </member>
        <member name="M:System.Dom.NodeIterator.previousNode">
            <summary>
            Moves to and returns the previous node in document order, relative to the current node.
            </summary>
            <returns>The specified node.</returns>
        </member>
        <member name="M:System.Dom.NodeIterator.detach">
            <summary>
            Detaches the node iterator from the tree.
            </summary>
        </member>
        <member name="P:System.Dom.NodeIterator.root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:System.Dom.NodeIterator.whatToShow">
            <summary>
            Gets a value indicating what nodes are visible to the iterator.
            </summary>
        </member>
        <member name="P:System.Dom.NodeIterator.filter">
            <summary>
            Gets the node filter used during iteration.
            </summary>
        </member>
        <member name="T:System.Css.StyleSheet">
            <summary>
            Represents an abstract stylesheet.
            </summary>
        </member>
        <member name="P:System.Css.StyleSheet.type">
            <summary>
            Get the type name.
            </summary>
        </member>
        <member name="P:System.Css.StyleSheet.ownerNode">
            <summary>
            Gets the node which contains the style sheet.
            </summary>
        </member>
        <member name="P:System.Css.StyleSheet.parentStyleSheet">
            <summary>
            Gets the parent of this style sheet.
            </summary>
        </member>
        <member name="P:System.Css.StyleSheet.href">
            <summary>
            Gets the location of the style sheet.
            </summary>
        </member>
        <member name="P:System.Css.StyleSheet.title">
            <summary>
            Gets the title text.
            </summary>
        </member>
        <member name="P:System.Css.StyleSheet.media">
            <summary>
            Gets the supported media of the style sheet.
            </summary>
        </member>
        <member name="P:System.Css.StyleSheet.disabled">
            <summary>
            Gets or sets a value indicating if the style sheet is disabled.
            </summary>
        </member>
        <member name="T:System.Css.MediaQueryListListener">
            <summary>
            Service contract for any object that will act as a listener for media query changes.
            </summary>
        </member>
        <member name="M:System.Css.MediaQueryListListener.handleChange(System.Css.MediaQueryList)">
            <summary>
            Called when the media query list state changes.
            </summary>
            <param name="list">The changed media query list.</param>
        </member>
        <member name="T:System.Dom.MouseEvent">
            <summary>
            Represents an event that is created by a mouse action.
            </summary>
            <summary>
            Represents an event that is created by a mouse action.
            </summary>
        </member>
        <member name="M:System.Dom.MouseEvent.initMouseEvent(System.String,System.Boolean,System.Boolean,System.Browser.Window,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Dom.EventTarget)">
            <summary>
            Initializes the value of a mouse event.
            </summary>
            <param name="type">The event type name.</param>
            <param name="canBubble">Whether or not the event can bubble.</param>
            <param name="canCancel">Whether or not the event can be cancelled.</param>
            <param name="view">The associated view.</param>
            <param name="detail">The event details.</param>
            <param name="screenX">The vertical screen coordinate.</param>
            <param name="screenY">The horizontal screen coordinate.</param>
            <param name="clientX">The vertical client coordinate.</param>
            <param name="clientY">The horizontal client coordinate.</param>
            <param name="ctrlKey">Whether the Ctrl key is pressed.</param>
            <param name="altKey">Whether the Alt key is pressed.</param>
            <param name="shiftKey">Whether the Shift key is pressed.</param>
            <param name="metaKey">Whther the meta key is pressed.</param>
            <param name="button">The associated mouse button.</param>
            <param name="relatedTarget">The secondary target.</param>
        </member>
        <member name="P:System.Dom.MouseEvent.pageX">
            <summary>
            Gets the x-coordinate where the event occurred, relative to the origin of the initial containing block.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.pageY">
            <summary>
            Gets the y-coordinate where the event occurred, relative to the origin of the initial containing block.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.x">
            <summary>
            Alias for <see cref="P:System.Dom.MouseEvent.clientX"/>.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.y">
            <summary>
            Alias for <see cref="P:System.Dom.MouseEvent.clientY"/>.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.offsetX">
            <summary>
            Gets the x-coordinate where the event occurred, relative to the origin of the padding edge.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.offsetY">
            <summary>
            Gets the y-coordinate where the event occurred, relative to the origin of the padding edge.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.screenX">
            <summary>
            Gets the vertical screen coordinate where the event occurred.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.screenY">
            <summary>
            Gets the horizontal screen coordinate where the event occurred.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.clientX">
            <summary>
            Gets the vertical client coordinate where the event occurred.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.clientY">
            <summary>
            Gets the horizontal client coordinate where the event occurred.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.ctrlKey">
            <summary>
            Gets a value indicating whether or not the Ctrl key was pressed when the event occurred.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.shiftKey">
            <summary>
            Gets a value indicating whether or not the Shift key was pressed when the event occurred.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.altKey">
            <summary>
            Gets a value indicating whether or not the Alt key was pressed when the event occurred.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.metaKey">
            <summary>
            Gets a value indicating whether or not the meta key was pressed when the event occurred.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.button">
            <summary>
            Gets a value indicating the mouse button that caused the event to occur.
            </summary>
        </member>
        <member name="P:System.Dom.MouseEvent.relatedTarget">
            <summary>
            Gets a secondary target related to the event.
            </summary>
        </member>
        <member name="T:history">
            <summary>
            Represents the browser's history object.
            </summary>
        </member>
        <member name="M:history.back">
            <summary>
            Loads the previous document in the history.
            </summary>
        </member>
        <member name="M:history.forward">
            <summary>
            Loads the next document in the history.
            </summary>
        </member>
        <member name="M:history.go(System.Int32)">
            <summary>
            Loads a document from history, relative to the current offset.
            </summary>
            <param name="delta">The history offset.</param>
        </member>
        <member name="M:history.pushState(System.Object,System.String)">
            <summary>
            Pushes a new item onto the history stack.
            </summary>
            <param name="state">The state data.</param>
            <param name="title">The title text.</param>
        </member>
        <member name="M:history.pushState(System.Object,System.String,System.String)">
            <summary>
            Pushes a new item onto the history stack.
            </summary>
            <param name="state">The state data.</param>
            <param name="title">The title text.</param>
            <param name="url">The URL.</param>
        </member>
        <member name="M:history.replaceState(System.Object,System.String)">
            <summary>
            Replaces the current item on the history stack.
            </summary>
            <param name="state">The state data.</param>
            <param name="title">The title text.</param>
        </member>
        <member name="M:history.replaceState(System.Object,System.String,System.String)">
            <summary>
            Replaces the current item on the history stack.
            </summary>
            <param name="state">The state data.</param>
            <param name="title">The title text.</param>
            <param name="url">The URL.</param>
        </member>
        <member name="P:history.length">
            <summary>
            Gets the number of items in the history.
            </summary>
        </member>
        <member name="P:history.state">
            <summary>
            Gets or sets the current history state.
            </summary>
        </member>
        <member name="T:System.Dom.MutationEvent">
            <summary>
            Represents an event created from a mutation action.
            </summary>
        </member>
        <member name="F:System.Dom.MutationEvent.MODIFICATION">
            <summary>
            The attribut was modified in place.
            </summary>
        </member>
        <member name="F:System.Dom.MutationEvent.ADDITION">
            <summary>
            The attribute was added.
            </summary>
        </member>
        <member name="F:System.Dom.MutationEvent.REMOVAL">
            <summary>
            The attribute was removed.
            </summary>
        </member>
        <member name="M:System.Dom.MutationEvent.initMutationEvent(System.String,System.Boolean,System.Boolean,System.Dom.Node,System.String,System.String,System.String,System.Int32)">
            <summary>
            Initializes the value of a mutation event.
            </summary>
            <param name="type">The event type name.</param>
            <param name="canBubble">Whether or not the event can bubble.</param>
            <param name="canCancel">Whether or not the event can be cancelled.</param>
            <param name="relatedNode">The secondary related node.</param>
            <param name="prevValue">The previous value.</param>
            <param name="newValue">The new value.</param>
            <param name="attrName">The attribute name.</param>
            <param name="attrChange">The type of mutation.</param>
        </member>
        <member name="P:System.Dom.MutationEvent.relatedNode">
            <summary>
            Gets a secondary node related to the event.
            </summary>
        </member>
        <member name="P:System.Dom.MutationEvent.prevValue">
            <summary>
            Gets the value prior to the mutation.
            </summary>
        </member>
        <member name="P:System.Dom.MutationEvent.newValue">
            <summary>
            Gets the value after the mutation.
            </summary>
        </member>
        <member name="P:System.Dom.MutationEvent.attrName">
            <summary>
            Gets the target attribute name.
            </summary>
        </member>
        <member name="P:System.Dom.MutationEvent.attrChange">
            <summary>
            Gets the type of mutation.
            </summary>
        </member>
        <member name="T:System.Css.CSSStyleRule">
            <summary>
            Represents a single rule set in a CSS style sheet.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleRule.style">
            <summary>
            Gets the declaration-block of this rule set.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleRule.selectorText">
            <summary>
            Gets or sets the textual representation of the selector for the rule set.
            </summary>
        </member>
        <member name="T:System.Dom.NodeList">
            <summary>
            Represents an ordered list of nodes.
            </summary>
        </member>
        <member name="M:System.Dom.NodeList.item(System.Int32)">
            <summary>
            Gets the item at the specified index in the list.
            </summary>
            <param name="index">The index.</param>
            <returns>A node item.</returns>
        </member>
        <member name="P:System.Dom.NodeList.length">
            <summary>
            Gets the number of nodes in the list.
            </summary>
        </member>
        <member name="T:location">
            <summary>
            Represents the browser's location object.
            </summary>
        </member>
        <member name="T:System.Browser.Location">
            <summary>
            The definition for the browser location object.
            </summary>
        </member>
        <member name="M:System.Browser.Location.reload">
            <summary>
            Reloads the current document.
            </summary>
        </member>
        <member name="M:System.Browser.Location.reload(System.Boolean)">
            <summary>
            Reloads the current document.
            </summary>
            <param name="force">True to force reload from the server.</param>
        </member>
        <member name="M:System.Browser.Location.replace(System.String)">
            <summary>
            Replaces the current document with a new one.
            </summary>
            <param name="url">The document URL.</param>
        </member>
        <member name="M:System.Browser.Location.assign(System.String)">
            <summary>
            Load the document at the provided URL.
            </summary>
            <param name="url">The document URL.</param>
        </member>
        <member name="P:System.Browser.Location.hash">
            <summary>
            Gets or sets the URL hash value.
            </summary>
        </member>
        <member name="P:System.Browser.Location.host">
            <summary>
            Gets the hostname and port of the URL.
            </summary>
        </member>
        <member name="P:System.Browser.Location.hostname">
            <summary>
            Gets the hostname of the URL.
            </summary>
        </member>
        <member name="P:System.Browser.Location.href">
            <summary>
            Gets or sets the entire URL.
            </summary>
        </member>
        <member name="P:System.Browser.Location.pathname">
            <summary>
            Gets or sets the root relative path or the URL.
            </summary>
        </member>
        <member name="P:System.Browser.Location.port">
            <summary>
            Gets or sets the port of the URL.
            </summary>
        </member>
        <member name="P:System.Browser.Location.protocol">
            <summary>
            Gets the protocol of the URL.
            </summary>
        </member>
        <member name="P:System.Browser.Location.search">
            <summary>
            Gets or sets the query string of the URL.
            </summary>
        </member>
        <member name="M:location.reload">
            <summary>
            Reloads the current document.
            </summary>
        </member>
        <member name="M:location.reload(System.Boolean)">
            <summary>
            Reloads the current document.
            </summary>
            <param name="force">True to force reload from the server.</param>
        </member>
        <member name="M:location.replace(System.String)">
            <summary>
            Replaces the current document with a new one.
            </summary>
            <param name="url">The document URL.</param>
        </member>
        <member name="M:location.assign(System.String)">
            <summary>
            Load the document at the provided URL.
            </summary>
            <param name="url">The document URL.</param>
        </member>
        <member name="P:location.hash">
            <summary>
            Gets or sets the URL hash value.
            </summary>
        </member>
        <member name="P:location.host">
            <summary>
            Gets the hostname and port of the URL.
            </summary>
        </member>
        <member name="P:location.hostname">
            <summary>
            Gets the hostname of the URL.
            </summary>
        </member>
        <member name="P:location.href">
            <summary>
            Gets or sets the entire URL.
            </summary>
        </member>
        <member name="P:location.pathname">
            <summary>
            Gets or sets the root relative path or the URL.
            </summary>
        </member>
        <member name="P:location.port">
            <summary>
            Gets or sets the port of the URL.
            </summary>
        </member>
        <member name="P:location.protocol">
            <summary>
            Gets the protocol of the URL.
            </summary>
        </member>
        <member name="P:location.search">
            <summary>
            Gets or sets the query string of the URL.
            </summary>
        </member>
        <member name="T:System.Browser.ReadyState">
            <summary>
            Represents the available ready state values.
            </summary>
        </member>
        <member name="F:System.Browser.ReadyState.UNSENT">
            <summary>
            <see cref="T:System.Browser.XMLHttpRequest"/>'s open method has not yet been called.
            </summary>
        </member>
        <member name="F:System.Browser.ReadyState.OPENED">
            <summary>
            <see cref="T:System.Browser.XMLHttpRequest"/>'s send method has not yet been called.
            </summary>
        </member>
        <member name="F:System.Browser.ReadyState.RECEIVED">
            <summary>
            Headers and status are available.
            </summary>
        </member>
        <member name="F:System.Browser.ReadyState.LOADING">
            <summary>
            Download in progress.
            </summary>
        </member>
        <member name="F:System.Browser.ReadyState.DONE">
            <summary>
            The operation is complete.
            </summary>
        </member>
        <member name="T:System.Css.CSSStyleDeclaration">
            <summary>
            Represents a single CSS declaration block.
            </summary>
        </member>
        <member name="M:System.Css.CSSStyleDeclaration.getPropertyValue(System.String)">
            <summary>
            Gets a property value by name.
            </summary>
            <param name="propertyName">The property name.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:System.Css.CSSStyleDeclaration.removeProperty(System.String)">
            <summary>
            Removes a property by name.
            </summary>
            <param name="propertyName">The property name.</param>
            <returns>The removed property value.</returns>
        </member>
        <member name="M:System.Css.CSSStyleDeclaration.getPropertyPriority(System.String)">
            <summary>
            Gets a property priority by name.
            </summary>
            <param name="propertyName">The property name.</param>
            <returns>The priority string.</returns>
        </member>
        <member name="M:System.Css.CSSStyleDeclaration.setProperty(System.String,System.String)">
            <summary>
            Sets a property value.
            </summary>
            <param name="propertyName">The property name.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:System.Css.CSSStyleDeclaration.setProperty(System.String,System.String,System.String)">
            <summary>
            Sets a property value.
            </summary>
            <param name="propertyName">The property name.</param>
            <param name="value">The property value.</param>
            <param name="priority">The priority.</param>
        </member>
        <member name="M:System.Css.CSSStyleDeclaration.item(System.Int32)">
            <summary>
            Gets an item from the collection by index.
            </summary>
            <param name="index">The index.</param>
            <returns>The property value.</returns>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.parentRule">
            <summary>
            Gets the CSS rule that contains this declaration block.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.length">
            <summary>
            Gets the number of properties set in the declaration.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.cssText">
            <summary>
            Gets or sets the text value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.azimuth">
            <summary>
            Gets or sets the azimuth value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.background">
            <summary>
            Gets or sets the background value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.backgroundAttachment">
            <summary>
            Gets or sets the background attachment value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.backgroundColor">
            <summary>
            Gets or sets the background color value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.backgroundImage">
            <summary>
            Gets or sets the background image value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.backgroundPosition">
            <summary>
            Gets or sets the background position value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.backgroundRepeat">
            <summary>
            Gets or sets the background repeat value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.border">
            <summary>
            Gets or sets the border value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderCollapse">
            <summary>
            Gets or sets the border collapse value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderColor">
            <summary>
            Gets or sets the border color value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderSpacing">
            <summary>
            Gets or sets the border spacing value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderStyle">
            <summary>
            Gets or sets the border style value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderTop">
            <summary>
            Gets or sets the border top value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderRight">
            <summary>
            Gets or sets the border right value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderBottom">
            <summary>
            Gets or sets the border bottom value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderLeft">
            <summary>
            Gets or sets the border left value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderTopColor">
            <summary>
            Gets or sets the border top color value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderRightColor">
            <summary>
            Gets or sets the border right color value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderBottomColor">
            <summary>
            Gets or sets the border bottom color value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderLeftColor">
            <summary>
            Gets or sets the border left color value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderTopStyle">
            <summary>
            Gets or sets the border top style value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderRightStyle">
            <summary>
            Gets or sets the border right style value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderBottomStyle">
            <summary>
            Gets or sets the border bottom style value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderLeftStyle">
            <summary>
            Gets or sets the border left style value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderTopWidth">
            <summary>
            Gets or sets the border top width value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderRightWidth">
            <summary>
            Gets or sets the border right width value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderBottomWidth">
            <summary>
            Gets or sets the border bottom width value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderLeftWidth">
            <summary>
            Gets or sets the border left width value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.borderWidth">
            <summary>
            Gets or sets the border width value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.bottom">
            <summary>
            Gets or sets the bottom value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.captionSide">
            <summary>
            Gets or sets the caption side value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.clear">
            <summary>
            Gets or sets the clear value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.clip">
            <summary>
            Gets or sets the clip value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.color">
            <summary>
            Gets or sets the color value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.content">
            <summary>
            Gets or sets the content value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.counterIncrement">
            <summary>
            Gets or sets the counter increment value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.counterReset">
            <summary>
            Gets or sets the counter reset value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.cue">
            <summary>
            Gets or sets the cue value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.cueAfter">
            <summary>
            Gets or sets the cue after value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.cueBefore">
            <summary>
            Gets or sets the cue before value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.cursor">
            <summary>
            Gets or sets the cursor value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.direction">
            <summary>
            Gets or sets the direction value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.display">
            <summary>
            Gets or sets the display value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.elevation">
            <summary>
            Gets or sets the elevation value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.emptyCells">
            <summary>
            Gets or sets the empty cells value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.cssFloat">
            <summary>
            Gets or sets the css float value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.font">
            <summary>
            Gets or sets the font value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.fontFamily">
            <summary>
            Gets or sets the font family value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.fontSize">
            <summary>
            Gets or sets the font size value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.fontSizeAdjust">
            <summary>
            Gets or sets the font size adjust value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.fontStretch">
            <summary>
            Gets or sets the font stretch value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.fontStyle">
            <summary>
            Gets or sets the font style value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.fontVariant">
            <summary>
            Gets or sets the font variant value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.fontWeight">
            <summary>
            Gets or sets the font weight value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.height">
            <summary>
            Gets or sets the height value.
            </summary>}
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.left">
            <summary>
            Gets or sets the left value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.letterSpacing">
            <summary>
            Gets or sets the letter spacing value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.lineHeight">
            <summary>
            Gets or sets the line height value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.listStyle">
            <summary>
            Gets or sets the list style value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.listStyleImage">
            <summary>
            Gets or sets the list style image value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.listStylePosition">
            <summary>
            Gets or sets the list style position value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.listStyleType">
            <summary>
            Gets or sets the list style type value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.margin">
            <summary>
            Gets or sets the margin value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.marginTop">
            <summary>
            Gets or sets the margin top value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.marginRight">
            <summary>
            Gets or sets the margin right value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.marginBottom">
            <summary>
            Gets or sets the margin bottom value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.marginLeft">
            <summary>
            Gets or sets the margin left value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.markerOffset">
            <summary>
            Gets or sets the marker offset value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.marks">
            <summary>
            Gets or sets the marks value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.maxHeight">
            <summary>
            Gets or sets the max height value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.maxWidth">
            <summary>
            Gets or sets the max width value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.minHeight">
            <summary>
            Gets or sets the min height value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.minWidth">
            <summary>
            Gets or sets the min width value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.orphans">
            <summary>
            Gets or sets the orphans value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.outline">
            <summary>
            Gets or sets the outline value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.outlineColor">
            <summary>
            Gets or sets the outline color value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.outlineStyle">
            <summary>
            Gets or sets the outline style value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.outlineWidth">
            <summary>
            Gets or sets the outline width value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.overflow">
            <summary>
            Gets or sets the overflow value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.padding">
            <summary>
            Gets or sets the padding value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.paddingTop">
            <summary>
            Gets or sets the padding top value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.paddingRight">
            <summary>
            Gets or sets the padding right value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.paddingBottom">
            <summary>
            Gets or sets the padding bottom value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.paddingLeft">
            <summary>
            Gets or sets the padding left value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.page">
            <summary>
            Gets or sets the page value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.pageBreakAfter">
            <summary>
            Gets or sets the page break after value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.pageBreakBefore">
            <summary>
            Gets or sets the page break before value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.pageBreakInside">
            <summary>
            Gets or sets the page break inside value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.pause">
            <summary>
            Gets or sets the pause value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.pauseAfter">
            <summary>
            Gets or sets the pause after value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.pauseBefore">
            <summary>
            Gets or sets the pause before value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.pitch">
            <summary>
            Gets or sets the pitch value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.pitchRange">
            <summary>
            Gets or sets the pitch range value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.playDuring">
            <summary>
            Gets or sets the play during value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.position">
            <summary>
            Gets or sets the position value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.quotes">
            <summary>
            Gets or sets the quotes value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.richness">
            <summary>
            Gets or sets the richness value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.right">
            <summary>
            Gets or sets the right value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.size">
            <summary>
            Gets or sets the size value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.speak">
            <summary>
            Gets or sets the speak value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.speakHeader">
            <summary>
            Gets or sets the speak header value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.speakNumeral">
            <summary>
            Gets or sets the speak numeral value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.speakPunctuation">
            <summary>
            Gets or sets the speak punctuation value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.speechRate">
            <summary>
            Gets or sets the speech rate value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.stress">
            <summary>
            Gets or sets the stress value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.tableLayout">
            <summary>
            Gets or sets the table layout value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.textAlign">
            <summary>
            Gets or sets the text align value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.textDecoration">
            <summary>
            Gets or sets the text decoration value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.textIndent">
            <summary>
            Gets or sets the text indent value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.textShadow">
            <summary>
            Gets or sets the text shadow value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.textTransform">
            <summary>
            Gets or sets the text transform value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.top">
            <summary>
            Gets or sets the top value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.unicodeBidi">
            <summary>
            Gets or sets the unicode bidi value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.verticalAlign">
            <summary>
            Gets or sets the vertical align value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.visibility">
            <summary>
            Gets or sets the visibility value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.voiceFamily">
            <summary>
            Gets or sets the voice family value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.volume">
            <summary>
            Gets or sets the volume value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.whiteSpace">
            <summary>
            Gets or sets the white space value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.widows">
            <summary>
            Gets or sets the widows value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.width">
            <summary>
            Gets or sets the width value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.wordSpacing">
            <summary>
            Gets or sets the word spacing value.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleDeclaration.zIndex">
            <summary>
            Gets or sets the z-index value.
            </summary>
        </member>
        <member name="T:System.Dom.MouseEventHandler">
            <summary>
            The method signature for mouse event handlers.
            </summary>
            <param name="e">The mouse event.</param>
        </member>
        <member name="T:System.Dom.EventHandler">
            <summary>
            The method signature for event handlers.
            </summary>
            <param name="e">The event.</param>
        </member>
        <member name="T:System.Html.Image">
            <summary>
            Represents an HMLT image element.
            </summary>
        </member>
        <member name="M:System.Html.Image.#ctor">
            <summary>
            Creates a new image element.
            </summary>
        </member>
        <member name="M:System.Html.Image.#ctor(System.Int32)">
            <summary>
            Creates a new image element, with a specific width.
            </summary>
            <param name="width">The width, in pixels.</param>
        </member>
        <member name="M:System.Html.Image.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new image element, with a specific height and width.
            </summary>
            <param name="width">The width, in pixels.</param>
            <param name="height">The height, in pixels.</param>
        </member>
        <member name="T:System.Dom.DOMTokenList">
            <summary>
            Represents a set of space-separated tokens.
            </summary>
        </member>
        <member name="M:System.Dom.DOMTokenList.item(System.Int32)">
            <summary>
            Gets an item in the list by index.
            </summary>
            <param name="index">The item index.</param>
            <returns>The token at the specified index.</returns>
        </member>
        <member name="M:System.Dom.DOMTokenList.contains(System.String)">
            <summary>
            Gets a value indicating whether or not the list contains a token.
            </summary>
            <param name="token">The token to check for.</param>
            <returns>True if the token exists, false otherwise.</returns>
        </member>
        <member name="M:System.Dom.DOMTokenList.add(System.String)">
            <summary>
            Adds a token to the list.
            </summary>
            <param name="token">The token to add.</param>
        </member>
        <member name="M:System.Dom.DOMTokenList.remove(System.String)">
            <summary>
            Removes a token from the list.
            </summary>
            <param name="token">The token to remove.</param>
        </member>
        <member name="M:System.Dom.DOMTokenList.toggle(System.String)">
            <summary>
            If the list contains the token, it is removed.
            Otherwise the token is added to the list.
            </summary>
            <param name="token">The token to toggle.</param>
            <returns>True if the token was added.</returns>
        </member>
        <member name="P:System.Dom.DOMTokenList.length">
            <summary>
            Gets the number of items in the list.
            </summary>
        </member>
        <member name="T:System.Date">
            <summary>
            Represents the ECMA Date object.
            </summary>
        </member>
        <member name="M:System.Date.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Date"/> class.
            </summary>
        </member>
        <member name="M:System.Date.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Date"/> class.
            </summary>
            <param name="milliseconds">The milliseconds.</param>
        </member>
        <member name="M:System.Date.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Date"/> class.
            </summary>
            <param name="dateString">The date string.</param>
        </member>
        <member name="M:System.Date.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Date"/> class.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="date">The date.</param>
            <param name="hours">The hours.</param>
            <param name="minutes">The minutes.</param>
            <param name="seconds">The seconds.</param>
            <param name="milliseconds">The milliseconds.</param>
        </member>
        <member name="M:System.Date.getDate">
            <summary>
            Get the day of the month.
            </summary>
            <returns>An integer from 1-31.</returns>
        </member>
        <member name="M:System.Date.getDay">
            <summary>
            Gets the day of the week.
            </summary>
            <returns>An integer from 0-6.</returns>
        </member>
        <member name="M:System.Date.getFullYear">
            <summary>
            Gets the full year.
            </summary>
            <returns>A four digit integer.</returns>
        </member>
        <member name="M:System.Date.getHours">
            <summary>
            Gets the hour.
            </summary>
            <returns>An integer from 0-23.</returns>
        </member>
        <member name="M:System.Date.getMilliseconds">
            <summary>
            Gets the milliseconds.
            </summary>
            <returns>An integer from 0-999.</returns>
        </member>
        <member name="M:System.Date.getMinutes">
            <summary>
            Gets the minutes.
            </summary>
            <returns>An integer from 0-59.</returns>
        </member>
        <member name="M:System.Date.getMonth">
            <summary>
            Gets the month.
            </summary>
            <returns>An integer from 0-11.</returns>
        </member>
        <member name="M:System.Date.getSeconds">
            <summary>
            Gets the seconds.
            </summary>
            <returns>An integer from 0-59.</returns>
        </member>
        <member name="M:System.Date.getTime">
            <summary>
            Get the number of milliseconds since Jan 1, 1970.
            </summary>
            <returns>An integer.</returns>
        </member>
        <member name="M:System.Date.getTimezoneOffset">
            <summary>
            Gets the time difference between GMT and local time, in minutes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Date.getUTCDate">
            <summary>
            Gets the day of the month, in universal time.
            </summary>
            <returns>An integer from 1-31.</returns>
        </member>
        <member name="M:System.Date.getUTCDay">
            <summary>
            Gets the day of the week, in universal time.
            </summary>
            <returns>An integer from 0-6.</returns>
        </member>
        <member name="M:System.Date.getUTCFullYear">
            <summary>
            Gets the year, in universal time.
            </summary>
            <returns>A four digit integer.</returns>
        </member>
        <member name="M:System.Date.getUTCHours">
            <summary>
            Gets the hour, in universal time.
            </summary>
            <returns>An integer from 0-23.</returns>
        </member>
        <member name="M:System.Date.getUTCMilliseconds">
            <summary>
            Gets the milliseconds, in universal time.
            </summary>
            <returns>An integer from 0-999.</returns>
        </member>
        <member name="M:System.Date.getUTCMinutes">
            <summary>
            Gets the minutes, in universal time.
            </summary>
            <returns>An integer from 0-59.</returns>
        </member>
        <member name="M:System.Date.getUTCMonth">
            <summary>
            Gets the month, in universal time.
            </summary>
            <returns>An integer from 0-11.</returns>
        </member>
        <member name="M:System.Date.getUTCSeconds">
            <summary>
            Gets the seconds, in universal time.
            </summary>
            <returns>An integer 0-59.</returns>
        </member>
        <member name="M:System.Date.setDate(System.Int32)">
            <summary>
            Sets the day of the month, from 1-31.
            </summary><param name="date">The date value.</param>
        </member>
        <member name="M:System.Date.setFullYear(System.Int32)">
            <summary>
            Sets the four digit year.
            </summary>
            <param name="year">The year value.</param>
        </member>
        <member name="M:System.Date.setHours(System.Int32)">
            <summary>
            Sets the hour, from 0-23.
            </summary>
            <param name="hour">The hour value.</param>
        </member>
        <member name="M:System.Date.setMilliseconds(System.Int32)">
            <summary>
            Sets the milliseconds, from 0-999.
            </summary>
            <param name="milliseconds">The millisecond value.</param>
        </member>
        <member name="M:System.Date.setMinutes(System.Int32)">
            <summary>
            Set the minutes, from 0-59.
            </summary>
            <param name="minute">The minute value.</param>
        </member>
        <member name="M:System.Date.setMonth(System.Int32)">
            <summary>
            Sets the month, from 0-11.
            </summary>
            <param name="month">The month value.</param>
        </member>
        <member name="M:System.Date.setSeconds(System.Int32)">
            <summary>
            Sets the seconds, from 0-59.
            </summary>
            <param name="second">The second value.</param>
        </member>
        <member name="M:System.Date.setTime(System.Int32)">
            <summary>
            Sets the time as an offset in milliseconds from Jan 1, 1970.
            </summary>
            <param name="millisecond">The millisecond value.</param>
        </member>
        <member name="M:System.Date.setUTCDate(System.Int32)">
            <summary>
            Sets the day of the month, in universal time, from 1-31.
            </summary>
            <param name="month">The month value.</param>
        </member>
        <member name="M:System.Date.setUTCFullYear(System.Int32)">
            <summary>
            Set the four digit year, in universal time.
            </summary>
            <param name="year">The year value.</param>
        </member>
        <member name="M:System.Date.setUTCHours(System.Int32)">
            <summary>
            Sets the hour, in universal time, from 0-23.
            </summary>
            <param name="hour">The hour value.</param>
        </member>
        <member name="M:System.Date.setUTCMilliseconds(System.Int32)">
            <summary>
            Sets the milliseconds, in universal time, from 0-999.
            </summary>
            <param name="millisecond">The millisecond value.</param>
        </member>
        <member name="M:System.Date.setUTCMinutes(System.Int32)">
            <summary>
            Set the minutes, in universal time, from 0-59.
            </summary>
            <param name="minute">The minute value.</param>
        </member>
        <member name="M:System.Date.setUTCMonth(System.Int32)">
            <summary>
            Sets the month, in universal time, from 0-11.
            </summary>
            <param name="month">The month value.</param>
        </member>
        <member name="M:System.Date.setUTCSeconds(System.Int32)">
            <summary>
            Set the seconds, in universal time, from 0-59.
            </summary>
            <param name="second">The second value.</param>
        </member>
        <member name="M:System.Date.toDateString">
            <summary>
            Gets the date portion of a date object as a string.
            </summary>
            <returns>A date string.</returns>
        </member>
        <member name="M:System.Date.toLocaleDateString">
            <summary>
            Gets the date portion of a date object as a string, using locale conventions.
            </summary>
            <returns>A date string.</returns>
        </member>
        <member name="M:System.Date.toLocaleTimeString">
            <summary>
            Gets the time portion of a date object as a string, using locale conventions.
            </summary>
            <returns>A date string.</returns>
        </member>
        <member name="M:System.Date.toTimeString">
            <summary>
            Gets the time portion of a date object as a string.
            </summary>
            <returns>A date string.</returns>
        </member>
        <member name="M:System.Date.toUTCString">
            <summary>
            Gets a date string, in universal time.
            </summary>
            <returns>A date string.</returns>
        </member>
        <member name="M:System.Date.now">
            <summary>
            Gets the current date and time as an offset in milliseconds since Jan 1, 1970.
            </summary>
            <returns>An integer.</returns>
        </member>
        <member name="M:System.Date.parse(System.String)">
            <summary>
            A string representing a date.
            </summary>
            <returns>The number of milliseconds since Jan 1, 1970.</returns>
        </member>
        <member name="M:System.Date.UTC">
            <summary>
            Gets the number of milliseconds in a date string sine Jan 1, 1970, in universal time.
            </summary>
            <returns>An integer.</returns>
        </member>
        <member name="T:System.Html.Option">
            <summary>
            Represents an HTML option element.
            </summary>
        </member>
        <member name="M:System.Html.Option.#ctor">
            <summary>
            Creates a new option element.
            </summary>
        </member>
        <member name="M:System.Html.Option.#ctor(System.String)">
            <summary>
            Creates a new option element.
            </summary>
            <param name="text">The option text.</param>
        </member>
        <member name="M:System.Html.Option.#ctor(System.String,System.String)">
            <summary>
            Creates a new option element.
            </summary>
            <param name="text">The option text.</param>
            <param name="value">The option value.</param>
        </member>
        <member name="M:System.Html.Option.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new option element.
            </summary>
            <param name="text">The option text.</param>
            <param name="value">The option value.</param>
            <param name="isDefault">True if the option is the default selection.</param>
        </member>
        <member name="M:System.Html.Option.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a new option element.
            </summary>
            <param name="text">The option text.</param>
            <param name="value">The option value.</param>
            <param name="isDefault">True if the option is the default selection.</param>
            <param name="isSelected">True if the option should be initially selected.</param>
        </member>
        <member name="T:System.Dom.DOMImplementation">
            <summary>
            Provides methods for performing operations that are independent of any particular instance of the document object model.
            </summary>
        </member>
        <member name="M:System.Dom.DOMImplementation.hasFeature(System.String,System.String)">
            <summary>
            Gets a value indicating whether of the a feature is supported.
            </summary>
            <param name="feature">The feature name.</param>
            <param name="version">The feature version.</param>
            <returns>True if the feature is supported, false otherwise.</returns>
        </member>
        <member name="M:System.Dom.DOMImplementation.createDocumentType(System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:System.Dom.DocumentType"/> node.
            </summary>
            <param name="qualifiedName">The qualified name.</param>
            <param name="publicId">The public identifier.</param>
            <param name="systemId">The system identifier.</param>
            <returns>The newly created node.</returns>
        </member>
        <member name="M:System.Dom.DOMImplementation.createDocument(System.String,System.String,System.Dom.DocumentType)">
            <summary>
            Creates a new <see cref="T:System.Dom.Document"/> node.
            </summary>
            <param name="namespaceURI">The namespace.</param>
            <param name="qualifiedName">The qualified name.</param>
            <param name="doctype">The document type node.</param>
            <returns>The newly created document.</returns>
        </member>
        <member name="M:System.Dom.DOMImplementation.createHTMLDocument(System.String)">
            <summary>
            Creates a new document, with a basic HTML tree constructed.
            </summary>
            <param name="title">The title of the document.</param>
            <returns>The newly created document.</returns>
        </member>
        <member name="T:System.Css.Screen">
            <summary>
            The definition for the browser screen object.
            </summary>
        </member>
        <member name="P:System.Css.Screen.height">
            <summary>
            Gets the client screen height, in pixels.
            </summary>
        </member>
        <member name="P:System.Css.Screen.width">
            <summary>
            Gets the client screen width, in pixels.
            </summary>
        </member>
        <member name="P:System.Css.Screen.pixelDepth">
            <summary>
            Gets the client pixel depth. 
            </summary>
        </member>
        <member name="P:System.Css.Screen.colorDepth">
            <summary>
            Gets the client color depth.
            </summary>
        </member>
        <member name="P:System.Css.Screen.availWidth">
            <summary>
            Gets the the client available width, in pixels.
            </summary>
        </member>
        <member name="P:System.Css.Screen.availHeight">
            <summary>
            Gets the client available height, in pixels.
            </summary>
        </member>
        <member name="T:console">
            <summary>
            Represents the browser console object.
            </summary>
        </member>
        <member name="M:console.clear">
            <summary>
            Clears all data from the console.
            </summary>
        </member>
        <member name="M:console.log(System.Object)">
            <summary>
            Writes a log message to the console.
            </summary>
            <param name="message">The value to write.</param>
        </member>
        <member name="M:console.info(System.Object)">
            <summary>
            Writes an informational message to the console.
            </summary>
            <param name="message">The value to write.</param>
        </member>
        <member name="M:console.warn(System.Object)">
            <summary>
            Writes a warning message to the console.
            </summary>
            <param name="message">The value to write.</param>
        </member>
        <member name="M:console.error(System.Object)">
            <summary>
            Writes an error message to the console.
            </summary>
            <param name="message">The value to write.</param>
        </member>
        <member name="M:System.Browser.JSON.parse(System.String)">
            <summary>
            Parse a string as JSON, optionally transform the produced value and its properties, and return the value.
            </summary>
            <param name="text">Parse a string as JSON, optionally transforming the value produced by parsing.</param>
            <returns>An object corresponding to the parsed JSON string.</returns>
        </member>
        <member name="M:System.Browser.JSON.parse(System.String,System.Action{System.String,System.Object})">
            <summary>
            Parse a string as JSON, optionally transform the produced value and its properties, and return the value.
            </summary>
            <param name="text">Parse a string as JSON, optionally transforming the value produced by parsing.</param>
            <param name="reviver">Prescribes how the value originally produced by parsing is transformed, before being returned.</param>
            <returns>An object corresponding to the parsed JSON string.</returns>
        </member>
        <member name="M:System.Browser.JSON.stringify(System.Object)">
            <summary>
            Converts a JavaScript object into a JSON string.
            </summary>
            <param name="value">The JavaScript object to convert into a JSON string.</param>
            <returns>The JSON serialized representation of the object.</returns>
        </member>
        <member name="M:System.Browser.JSON.stringify(System.Object,System.Func{System.String,System.Object,System.Object})">
            <summary>
            Converts a JavaScript object into a JSON string.
            </summary>
            <param name="value">The JavaScript object to convert into a JSON string.</param>
            <param name="replacer">A function that alters the behavior of the stringification process.</param>
            <returns>The JSON serialized representation of the object.</returns>
        </member>
        <member name="M:System.Browser.JSON.stringify(System.Object,System.Func{System.String,System.Object,System.Object},System.String)">
            <summary>
            Converts a JavaScript object into a JSON string.
            </summary>
            <param name="value">The JavaScript object to convert into a JSON string.</param>
            <param name="replacer">A function that alters the behavior of the stringification process.</param>
            <param name="space">This value (or its first 10 characters, if it's longer than that) is used as white space. If this parameter is not provided (or is null), no white space is used.</param>
            <returns>The JSON serialized representation of the object.</returns>
        </member>
        <member name="M:System.Browser.JSON.stringify(System.Object,System.Func{System.String,System.Object,System.Object},System.Int32)">
            <summary>
            Converts a JavaScript object into a JSON string.
            </summary>
            <param name="value">The JavaScript object to convert into a JSON string.</param>
            <param name="replacer">A function that alters the behavior of the stringification process.</param>
            <param name="space">The number of space characters to use as white space; this number is capped at 10 if it's larger than that. Values less than 1 indicate that no space should be used.</param>
            <returns>The JSON serialized representation of the object.</returns>
        </member>
        <member name="M:System.Browser.JSON.stringify(System.Object,System.Object[])">
            <summary>
            Converts a JavaScript object into a JSON string.
            </summary>
            <param name="value">The JavaScript object to convert into a JSON string.</param>
            <param name="replacer">Array of String and Number objects that serve as a whitelist for selecting the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string.</param>
            <returns>The JSON serialized representation of the object.</returns>
        </member>
        <member name="M:System.Browser.JSON.stringify(System.Object,System.Object[],System.String)">
            <summary>
            Converts a JavaScript object into a JSON string.
            </summary>
            <param name="value">The JavaScript object to convert into a JSON string.</param>
            <param name="replacer">Array of String and Number objects that serve as a whitelist for selecting the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string.</param>
            <param name="space">This value (or its first 10 characters, if it's longer than that) is used as white space. If this parameter is not provided (or is null), no white space is used.</param>
            <returns>The JSON serialized representation of the object.</returns>
        </member>
        <member name="M:System.Browser.JSON.stringify(System.Object,System.Object[],System.Int32)">
            <summary>
            Converts a JavaScript object into a JSON string.
            </summary>
            <param name="value">The JavaScript object to convert into a JSON string.</param>
            <param name="replacer">Array of String and Number objects that serve as a whitelist for selecting the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string.</param>
            <param name="space">The number of space characters to use as white space; this number is capped at 10 if it's larger than that. Values less than 1 indicate that no space should be used.</param>
            <returns>The JSON serialized representation of the object.</returns>
        </member>
        <member name="T:System.Css.CSSMediaRule">
            <summary>
            Represents a CSS media rule.
            </summary>
        </member>
        <member name="M:System.Css.CSSMediaRule.insertRule(System.String,System.Int32)">
            <summary>
            Adds a new rule.
            </summary>
            <param name="rule">The rule to add.</param>
            <param name="index">The index to add at.</param>
            <returns></returns>
        </member>
        <member name="M:System.Css.CSSMediaRule.deleteRule(System.Int32)">
            <summary>
            Removes a rule.
            </summary>
            <param name="index">The index to remove at.</param>
        </member>
        <member name="P:System.Css.CSSMediaRule.media">
            <summary>
            Gets the media queries defined by the media rule.
            </summary>
        </member>
        <member name="P:System.Css.CSSMediaRule.cssRules">
            <summary>
            Gets the rules specified with the media rule.
            </summary>
        </member>
        <member name="T:System.Dom.EventListener">
            <summary>
            Defines the service contract for any object that will handle events.
            </summary>
        </member>
        <member name="M:System.Dom.EventListener.handleEvent(System.Dom.Event)">
            <summary>
            Receives the event notifications.
            </summary>
            <param name="evt">The event object.</param>
        </member>
        <member name="T:System.Dom.TreeWalker">
            <summary>
            An object which can be used to navigate through a tree.
            </summary>
        </member>
        <member name="M:System.Dom.TreeWalker.parentNode">
            <summary>
            Moves to and returns the parent of the current node.
            </summary>
            <returns>The specified node.</returns>
        </member>
        <member name="M:System.Dom.TreeWalker.firstChild">
            <summary>
            Moves to and returns the first child of the current node.
            </summary>
            <returns>A node.</returns>
        </member>
        <member name="M:System.Dom.TreeWalker.lastChild">
            <summary>
            Moves to and returns the last child of the current node.
            </summary>
            <returns>The specified node.</returns>
        </member>
        <member name="M:System.Dom.TreeWalker.previousSibling">
            <summary>
            Moves to and returns the previous sibling of the current node.
            </summary>
            <returns>The specified node.</returns>
        </member>
        <member name="M:System.Dom.TreeWalker.nextSibling">
            <summary>
            Moves to and returns the next sibling of the current node.
            </summary>
            <returns>The specified node.</returns>
        </member>
        <member name="M:System.Dom.TreeWalker.previousNode">
            <summary>
            Moves to and returns the previous node in document order, relative to the current node.
            </summary>
            <returns>The specified node.</returns>
        </member>
        <member name="M:System.Dom.TreeWalker.nextNode">
            <summary>
            Moves to and returns the next node in document order, relative to the current node.
            </summary>
            <returns>The specified node.</returns>
        </member>
        <member name="P:System.Dom.TreeWalker.root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:System.Dom.TreeWalker.whatToShow">
            <summary>
            Gets a value indicating what type of nodes are visible to the tree walker.
            </summary>
        </member>
        <member name="P:System.Dom.TreeWalker.filter">
            <summary>
            Gets a filter used to sreen nodes.
            </summary>
        </member>
        <member name="P:System.Dom.TreeWalker.currentNode">
            <summary>
            Gets or sets the current node.
            </summary>
        </member>
        <member name="T:System.Css.CSSImportRule">
            <summary>
            Represents a CSS import rule.
            </summary>
        </member>
        <member name="P:System.Css.CSSImportRule.href">
            <summary>
            Gets the URL specified by the import rule.
            </summary>
        </member>
        <member name="P:System.Css.CSSImportRule.media">
            <summary>
            Gets the value of the media attribute applied to the stylesheet.
            </summary>
        </member>
        <member name="P:System.Css.CSSImportRule.styleSheet">
            <summary>
            Gets the associated stylesheet.
            </summary>
        </member>
        <member name="T:System.Dom.DocumentType">
            <summary>
            Represents a document type node.
            </summary>
        </member>
        <member name="P:System.Dom.DocumentType.name">
            <summary>
            Gets the document type name.
            </summary>
        </member>
        <member name="P:System.Dom.DocumentType.publicId">
            <summary>
            Gets the public identifier.
            </summary>
        </member>
        <member name="P:System.Dom.DocumentType.systemId">
            <summary>
            Gets the system identifier.
            </summary>
        </member>
        <member name="T:System.Dom.Comment">
            <summary>
            Represents a comment node.
            </summary>
        </member>
        <member name="T:System.Math">
            <summary>
            Represents the ECMA Math object.
            </summary>
        </member>
        <member name="F:System.Math.E">
            <summary>
            Euler's number (approx. 2.718)
            </summary>
        </member>
        <member name="F:System.Math.LN2">
            <summary>
            The natural logarithm of 2 (approx. 0.693)
            </summary>
        </member>
        <member name="F:System.Math.LN10">
            <summary>
            The natural logarithm of 10 (approx. 2.302)
            </summary>
        </member>
        <member name="F:System.Math.LOG2E">
            <summary>
            The base-2 logarithm of E (approx. 1.442)
            </summary>
        </member>
        <member name="F:System.Math.LOG10E">
            <summary>
            The base-10 logarithm of E (approx. 0.434)
            </summary>
        </member>
        <member name="F:System.Math.PI">
            <summary>
            PI (approx. 3.14159)
            </summary>
        </member>
        <member name="F:System.Math.SQRT1_2">
            <summary>
            The square root of 1/2 (approx. 0.707)
            </summary>
        </member>
        <member name="F:System.Math.SQRT2">
            <summary>
            The square root of 2 (approx. 1.414)
            </summary>
        </member>
        <member name="M:System.Math.abs(System.INumber)">
            <summary>
            Gets the absolute value of a number.
            </summary>
            <param name="x">The input value.</param>
            <returns>A number.</returns>
        </member>
        <member name="M:System.Math.acos(System.INumber)">
            <summary>
            Gets the arccosine of a number, in radians.
            </summary>
            <param name="x">The input value.</param>
            <returns>A number.</returns>
        </member>
        <member name="M:System.Math.asin(System.INumber)">
            <summary>
            Gets the arcsine of a number, in radians.
            </summary>
            <param name="x">The input value.</param>
            <returns>A number.</returns>
        </member>
        <member name="M:System.Math.atan(System.INumber)">
            <summary>
            Gets the arctangent of a number, in radians.
            </summary>
            <param name="x">The input value.</param>
            <returns>A number.</returns>
        </member>
        <member name="M:System.Math.atan2(System.INumber,System.INumber)">
            <summary>
            Gets the arctangent of a number, in radians.
            </summary>
            <param name="x">The input value.</param>
            <returns>A number.</returns>
        </member>
        <member name="M:System.Math.ceil(System.INumber)">
            <summary>
            Converts a number to an integer by rounding up.
            </summary>
            <param name="x">The input value.</param>
            <returns>An integer.</returns>
        </member>
        <member name="M:System.Math.cos(System.INumber)">
            <summary>
            Gets the cosine of a number, in radians.
            </summary>
            <param name="x">The input value.</param>
            <returns>A number.</returns>
        </member>
        <member name="M:System.Math.exp(System.INumber)">
            <summary>
            Gets the exponential of a number.
            </summary>
            <param name="x">The input value.</param>
            <returns>A number.</returns>
        </member>
        <member name="M:System.Math.floor(System.INumber)">
            <summary>
            Converts a number to an integer by rounding down.
            </summary>
            <param name="x">The input value.</param>
            <returns>An integer.</returns>
        </member>
        <member name="M:System.Math.log(System.INumber)">
            <summary>
            Gets the natural logarithm of a number.
            </summary>
            <param name="x">The input value.</param>
            <returns>A number.</returns>
        </member>
        <member name="M:System.Math.max(System.INumber[])">
            <summary>
            Gets the highest value from a set of numbers.
            </summary>
            <param name="values">The input values.</param>
            <returns>A number.</returns>
        </member>
        <member name="M:System.Math.min(System.INumber[])">
            <summary>
            Gets the lowest value from a set of numbers.
            </summary>
            <param name="values">The input values.</param>
            <returns>A number.</returns>
        </member>
        <member name="M:System.Math.pow(System.INumber,System.INumber)">
            <summary>
            Gets the value of a number raised to a power.
            </summary>
            <param name="x">The input value.</param>
            <param name="y">The power to raise to.</param>
            <returns>A number.</returns>
        </member>
        <member name="M:System.Math.random">
            <summary>
            Gets a random number between 0 and 1.
            </summary>
            <returns>A number.</returns>
        </member>
        <member name="M:System.Math.round(System.INumber)">
            <summary>
            Converts to an integer, by rounding to the nearest whole number.
            </summary>
            <param name="x">The input value.</param>
            <returns>An integer.</returns>
        </member>
        <member name="M:System.Math.sin(System.INumber)">
            <summary>
            Gets the sine of a number, in radians.
            </summary>
            <param name="x">The input value.</param>
            <returns>A number.</returns>
        </member>
        <member name="M:System.Math.sqrt(System.INumber)">
            <summary>
            Gets the square root of a number.
            </summary>
            <param name="x">The input value.</param>
            <returns>A number.</returns>
        </member>
        <member name="M:System.Math.tan(System.INumber)">
            <summary>
            Gets the tangent of a number, in radians.
            </summary>
            <param name="x">The input value.</param>
            <returns>A number.</returns>
        </member>
        <member name="T:System.Css.CSSStyleSheet">
            <summary>
            Represents a CSS style sheet.
            </summary>
        </member>
        <member name="M:System.Css.CSSStyleSheet.insertRule(System.String,System.Int32)">
            <summary>
            Inserts a new rule into the style sheet.
            </summary>
            <param name="rule">The rule name.</param>
            <param name="index">The index to insert at.</param>
            <returns>The inserted index.</returns>
        </member>
        <member name="M:System.Css.CSSStyleSheet.deleteRule(System.Int32)">
            <summary>
            Deletes a rule from the style sheet.
            </summary>
            <param name="index">The index to delete at.</param>
        </member>
        <member name="P:System.Css.CSSStyleSheet.ownerRule">
            <summary>
            Gets the owner if the style sheet was imported by a rule.
            </summary>
        </member>
        <member name="P:System.Css.CSSStyleSheet.cssRules">
            <summary>
            Gets the CSS rule collection.
            </summary>
        </member>
        <member name="T:System.Dom.Text">
            <summary>
            Represents a text node.
            </summary>
        </member>
        <member name="M:System.Dom.Text.splitText(System.Int32)">
            <summary>
            Splits the text node at the specified offset.
            </summary>
            <param name="offset">The index to split at.</param>
            <returns>The newly created node.</returns>
        </member>
        <member name="P:System.Dom.Text.wholeText">
            <summary>
            Gets all contiguous text node values joined together, in order.
            </summary>
        </member>
        <member name="T:System.Browser.Storage">
             <summary>
             Each Storage object provides access to a list of key/value pairs, which are sometimes called items. Keys are strings. Any string (including the empty string) is a valid key. Values are similarly strings.
            
             Each Storage object is associated with a list of key/value pairs when it is created, as defined in the sections on the sessionStorage and localStorage attributes. Multiple separate objects implementing the Storage interface can all be associated with the same list of key/value pairs simultaneously.
             </summary>
        </member>
        <member name="M:System.Browser.Storage.key(System.UInt64)">
            <summary>
            Returns the name of the nth key in the list. The order of keys is user-agent defined, but must be consistent within an object so long as the number of keys doesn't change. (Thus, adding or removing a key may change the order of the keys, but merely changing the value of an existing key must not.) If n is greater than or equal to the number of key/value pairs in the object, then this method must return null.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:System.Browser.Storage.getItem(System.String)">
            <summary>
            Returns the current value associated with the given key. If the given key does not exist in the list associated with the object then this method must return null. 
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:System.Browser.Storage.setItem(System.String,System.String)">
            <summary>
            Checks if a key/value pair with the given key already exists in the list associated with the object.
            
            If it does not, then a new key/value pair must be added to the list, with the given key and with its value set to value.
            
            If it does not, then a new key/value pair must be added to the list, with the given key and with its value set to value.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:System.Browser.Storage.removeItem(System.String)">
            <summary>
            Causes the key/value pair with the given key to be removed from the list associated with the object, if it exists. If no item with that key exists, the method must do nothing.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:System.Browser.Storage.clear">
            <summary>
            Atomically causes the list associated with the object to be emptied of all key/value pairs, if there are any. If there are none, then the method must do nothing.
            </summary>
        </member>
        <member name="P:System.Browser.Storage.length">
            <summary>
            The number of key/value pairs currently present in the list associated with the object.
            </summary>
        </member>
        <member name="T:screen">
            <summary>
            Represent the browser's screen object.
            </summary>
        </member>
        <member name="P:screen.height">
            <summary>
            Gets the client screen height, in pixels.
            </summary>
        </member>
        <member name="P:screen.width">
            <summary>
            Gets the client screen width, in pixels.
            </summary>
        </member>
        <member name="P:screen.pixelDepth">
            <summary>
            Gets the client pixel depth. 
            </summary>
        </member>
        <member name="P:screen.colorDepth">
            <summary>
            Gets the client color depth.
            </summary>
        </member>
        <member name="P:screen.availWidth">
            <summary>
            Gets the the client available width, in pixels.
            </summary>
        </member>
        <member name="P:screen.availHeight">
            <summary>
            Gets the client available height, in pixels.
            </summary>
        </member>
        <member name="T:System.Function">
            <summary>
            Represents the ECMA Function object.
            </summary>
        </member>
        <member name="M:System.Function.#ctor(System.String[])">
            <summary>
            Creates a new function from string arguments.
            </summary>
            <param name="args">The function parameters and body text.</param>
        </member>
        <member name="M:System.Function.call(System.Object)">
            <summary>
            Invokes the function with a specific context.
            </summary>
            <param name="thisArg">The context to use for this.</param>
            <returns>The result of the invoked function.</returns>
        </member>
        <member name="M:System.Function.call(System.Object,System.Object[])">
            <summary>
            Invokes the function with a specific context, and arguments.
            </summary>
            <param name="thisArg">The context to use for this.</param>
            <param name="args">The function arguments.</param>
            <returns>The result of the invoked function.</returns>
        </member>
        <member name="M:System.Function.apply(System.Object)">
            <summary>
            Invokes the function with a specific context.
            </summary>
            <param name="thisArg">The context to use for this.</param>
            <returns>The result of the invoked function.</returns>
        </member>
        <member name="M:System.Function.apply(System.Object,System.Object[])">
            <summary>
            Invokes the function with a specific context, and arguments.
            </summary>
            <param name="thisArg">The context to use for this.</param>
            <param name="args">The function arguments.</param>
            <returns>The result of the invoked function.</returns>
        </member>
        <member name="T:System.Css.MediaList">
            <summary>
            Represents a collection of media types.
            </summary>
        </member>
        <member name="M:System.Css.MediaList.item(System.Int32)">
            <summary>
            Gets a specific item by index.
            </summary>
            <param name="index">The index.</param>
            <returns>The media type name.</returns>
        </member>
        <member name="M:System.Css.MediaList.deleteMedium(System.String)">
            <summary>
            Removes an item by name.
            </summary>
            <param name="oldMedium">The type name to remove.</param>
        </member>
        <member name="M:System.Css.MediaList.appendMedium(System.String)">
            <summary>
            Adds a new item by name.
            </summary>
            <param name="newMedium">The type name to add.</param>
        </member>
        <member name="P:System.Css.MediaList.length">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:System.Css.MediaList.mediaText">
            <summary>
            Gets or sets the text for the media list.
            </summary>
        </member>
        <member name="T:navigator">
            <summary>
            Represents the browser's navigator object.
            </summary>
        </member>
        <member name="P:navigator.appName">
            <summary>
            Gets the name of the browser.
            </summary>
        </member>
        <member name="P:navigator.appVersion">
            <summary>
            Gets the browser version information.
            </summary>
        </member>
        <member name="P:navigator.cookieEnabled">
            <summary>
            Gets a value indicating whether or not cookies are enabled.
            </summary>
        </member>
        <member name="P:navigator.language">
            <summary>
            Gets the current browser language.
            </summary>
        </member>
        <member name="P:navigator.platform">
            <summary>
            Gets the name of the platform the browser is running on.
            </summary>
        </member>
        <member name="P:navigator.userAgent">
            <summary>
            Gets the user agent text.
            </summary>
        </member>
        <member name="T:System.Number">
            <summary>
            The ECMA Number object.
            </summary>
        </member>
        <member name="F:System.Number.MAX_VALUE">
            <summary>
            The maximum numeric value.
            </summary>
        </member>
        <member name="F:System.Number.MIN_VALUE">
            <summary>
            The minimum numeric value.
            </summary>
        </member>
        <member name="F:System.Number.NEGATIVE_INFINITY">
            <summary>
            The value representing negative infinity.
            </summary>
        </member>
        <member name="F:System.Number.POSITIVE_INFINITY">
            <summary>
            The value representing positive infinity.
            </summary>
        </member>
        <member name="M:System.Number.#ctor">
            <summary>
            Creates a new number, initialized to zero.
            </summary>
        </member>
        <member name="M:System.Number.#ctor(System.INumber)">
            <summary>
            Creates a new number.
            </summary>
            <param name="number">The numeric value.</param>
        </member>
        <member name="M:System.Number.toExponential(System.INumber)">
            <summary>
            Converts the number to exponential form.
            </summary>
            <param name="value">The exponent power.</param>
            <returns>A text representation of the number.</returns>
        </member>
        <member name="M:System.Number.toFixed(System.INumber)">
            <summary>
            Converts the number to a fixed form.
            </summary>
            <param name="value">The number of decimal places.</param>
            <returns>A text representation of the number.</returns>
        </member>
        <member name="M:System.Number.toPrecision(System.INumber)">
            <summary>
            Converts the number to a fixed precision form.
            </summary>
            <param name="value">The number of decimal places.</param>
            <returns>A text representation of the number.</returns>
        </member>
        <member name="T:System.Dom.HTMLCollection">
            <summary>
            Represents a generic collection of elements.
            </summary>
        </member>
        <member name="M:System.Dom.HTMLCollection.item(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:System.Dom.HTMLCollection.namedItem(System.String)">
            <summary>
            Gets the first element with the specified name or id value.
            </summary>
            <param name="name">The target name.</param>
            <returns></returns>
        </member>
        <member name="P:System.Dom.HTMLCollection.length">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
    </members>
</doc>
